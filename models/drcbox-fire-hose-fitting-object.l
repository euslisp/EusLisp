;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass drcbox-fire-hose-fitting-object
  :super cascaded-link
  :slots (sensors
         handle0 handle1
         ))
(defmethod drcbox-fire-hose-fitting-object
  (:init
   (&rest args &key (name "drcbox-fire-hose-fitting") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root-link
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.9808 -15.0 27.0) (float-vector 30.0 0.0 27.0) (float-vector 25.9808 15.0 27.0) (float-vector 15.0 25.9808 27.0) (float-vector 0.0 30.0 27.0) (float-vector -15.0 25.9808 27.0) (float-vector -25.9808 15.0 27.0) (float-vector -30.0 2.842171e-14 27.0) (float-vector -25.9808 -15.0 27.0) (float-vector -15.0 -25.9808 27.0) (float-vector 0.0 -30.0 27.0) (float-vector 15.0 -25.9808 27.0)))
         (instance face :init :vertices (list (float-vector 30.0 0.0 0.0) (float-vector 25.9808 -15.0 0.0) (float-vector 15.0 -25.9808 0.0) (float-vector 0.0 -30.0 0.0) (float-vector -15.0 -25.9808 0.0) (float-vector -25.9808 -15.0 0.0) (float-vector -30.0 2.842171e-14 0.0) (float-vector -25.9808 15.0 0.0) (float-vector -15.0 25.9808 0.0) (float-vector 0.0 30.0 0.0) (float-vector 15.0 25.9808 0.0) (float-vector 25.9808 15.0 0.0)))
         (instance face :init :vertices (list (float-vector 25.9808 -15.0 27.0) (float-vector 25.9808 -15.0 0.0) (float-vector 30.0 0.0 0.0) (float-vector 30.0 0.0 27.0)))
         (instance face :init :vertices (list (float-vector 15.0 -25.9808 27.0) (float-vector 15.0 -25.9808 0.0) (float-vector 25.9808 -15.0 0.0) (float-vector 25.9808 -15.0 27.0)))
         (instance face :init :vertices (list (float-vector 0.0 -30.0 27.0) (float-vector 0.0 -30.0 0.0) (float-vector 15.0 -25.9808 0.0) (float-vector 15.0 -25.9808 27.0)))
         (instance face :init :vertices (list (float-vector -15.0 -25.9808 27.0) (float-vector -15.0 -25.9808 0.0) (float-vector 0.0 -30.0 0.0) (float-vector 0.0 -30.0 27.0)))
         (instance face :init :vertices (list (float-vector -25.9808 -15.0 27.0) (float-vector -25.9808 -15.0 0.0) (float-vector -15.0 -25.9808 0.0) (float-vector -15.0 -25.9808 27.0)))
         (instance face :init :vertices (list (float-vector -30.0 2.842171e-14 27.0) (float-vector -30.0 2.842171e-14 0.0) (float-vector -25.9808 -15.0 0.0) (float-vector -25.9808 -15.0 27.0)))
         (instance face :init :vertices (list (float-vector -25.9808 15.0 27.0) (float-vector -25.9808 15.0 0.0) (float-vector -30.0 2.842171e-14 0.0) (float-vector -30.0 2.842171e-14 27.0)))
         (instance face :init :vertices (list (float-vector -15.0 25.9808 27.0) (float-vector -15.0 25.9808 0.0) (float-vector -25.9808 15.0 0.0) (float-vector -25.9808 15.0 27.0)))
         (instance face :init :vertices (list (float-vector 0.0 30.0 27.0) (float-vector 0.0 30.0 0.0) (float-vector -15.0 25.9808 0.0) (float-vector -15.0 25.9808 27.0)))
         (instance face :init :vertices (list (float-vector 15.0 25.9808 27.0) (float-vector 15.0 25.9808 0.0) (float-vector 0.0 30.0 0.0) (float-vector 0.0 30.0 27.0)))
         (instance face :init :vertices (list (float-vector 25.9808 15.0 27.0) (float-vector 25.9808 15.0 0.0) (float-vector 15.0 25.9808 0.0) (float-vector 15.0 25.9808 27.0)))
         (instance face :init :vertices (list (float-vector 30.0 0.0 27.0) (float-vector 30.0 0.0 0.0) (float-vector 25.9808 15.0 0.0) (float-vector 25.9808 15.0 27.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.9808 -15.0 87.0) (float-vector 30.0 0.0 87.0) (float-vector 25.9808 15.0 87.0) (float-vector 15.0 25.9808 87.0) (float-vector 0.0 30.0 87.0) (float-vector -15.0 25.9808 87.0) (float-vector -25.9808 15.0 87.0) (float-vector -30.0 2.842171e-14 87.0) (float-vector -25.9808 -15.0 87.0) (float-vector -15.0 -25.9808 87.0) (float-vector 0.0 -30.0 87.0) (float-vector 15.0 -25.9808 87.0)))
         (instance face :init :vertices (list (float-vector 30.0 0.0 27.0) (float-vector 25.9808 -15.0 27.0) (float-vector 15.0 -25.9808 27.0) (float-vector 0.0 -30.0 27.0) (float-vector -15.0 -25.9808 27.0) (float-vector -25.9808 -15.0 27.0) (float-vector -30.0 2.842171e-14 27.0) (float-vector -25.9808 15.0 27.0) (float-vector -15.0 25.9808 27.0) (float-vector 0.0 30.0 27.0) (float-vector 15.0 25.9808 27.0) (float-vector 25.9808 15.0 27.0)))
         (instance face :init :vertices (list (float-vector 25.9808 -15.0 87.0) (float-vector 25.9808 -15.0 27.0) (float-vector 30.0 0.0 27.0) (float-vector 30.0 0.0 87.0)))
         (instance face :init :vertices (list (float-vector 15.0 -25.9808 87.0) (float-vector 15.0 -25.9808 27.0) (float-vector 25.9808 -15.0 27.0) (float-vector 25.9808 -15.0 87.0)))
         (instance face :init :vertices (list (float-vector 0.0 -30.0 87.0) (float-vector 0.0 -30.0 27.0) (float-vector 15.0 -25.9808 27.0) (float-vector 15.0 -25.9808 87.0)))
         (instance face :init :vertices (list (float-vector -15.0 -25.9808 87.0) (float-vector -15.0 -25.9808 27.0) (float-vector 0.0 -30.0 27.0) (float-vector 0.0 -30.0 87.0)))
         (instance face :init :vertices (list (float-vector -25.9808 -15.0 87.0) (float-vector -25.9808 -15.0 27.0) (float-vector -15.0 -25.9808 27.0) (float-vector -15.0 -25.9808 87.0)))
         (instance face :init :vertices (list (float-vector -30.0 2.842171e-14 87.0) (float-vector -30.0 2.842171e-14 27.0) (float-vector -25.9808 -15.0 27.0) (float-vector -25.9808 -15.0 87.0)))
         (instance face :init :vertices (list (float-vector -25.9808 15.0 87.0) (float-vector -25.9808 15.0 27.0) (float-vector -30.0 2.842171e-14 27.0) (float-vector -30.0 2.842171e-14 87.0)))
         (instance face :init :vertices (list (float-vector -15.0 25.9808 87.0) (float-vector -15.0 25.9808 27.0) (float-vector -25.9808 15.0 27.0) (float-vector -25.9808 15.0 87.0)))
         (instance face :init :vertices (list (float-vector 0.0 30.0 87.0) (float-vector 0.0 30.0 27.0) (float-vector -15.0 25.9808 27.0) (float-vector -15.0 25.9808 87.0)))
         (instance face :init :vertices (list (float-vector 15.0 25.9808 87.0) (float-vector 15.0 25.9808 27.0) (float-vector 0.0 30.0 27.0) (float-vector 0.0 30.0 87.0)))
         (instance face :init :vertices (list (float-vector 25.9808 15.0 87.0) (float-vector 25.9808 15.0 27.0) (float-vector 15.0 25.9808 27.0) (float-vector 15.0 25.9808 87.0)))
         (instance face :init :vertices (list (float-vector 30.0 0.0 87.0) (float-vector 30.0 0.0 27.0) (float-vector 25.9808 15.0 27.0) (float-vector 25.9808 15.0 87.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 19.9186 32.5407 106.362) (float-vector 23.0 42.5 100.612) (float-vector 19.9186 52.4593 94.8622) (float-vector 11.5 59.75 90.6529) (float-vector 0.0 62.4186 89.1122) (float-vector -11.5 59.75 90.6529) (float-vector -19.9186 52.4593 94.8622) (float-vector -23.0 42.5 100.612) (float-vector -19.9186 32.5407 106.362) (float-vector -11.5 25.25 110.571) (float-vector 0.0 22.5814 112.112) (float-vector 11.5 25.25 110.571)))
         (instance face :init :vertices (list (float-vector 23.0 35.0 87.6218) (float-vector 19.9186 25.0407 93.3718) (float-vector 11.5 17.75 97.5811) (float-vector 0.0 15.0814 99.1218) (float-vector -11.5 17.75 97.5811) (float-vector -19.9186 25.0407 93.3718) (float-vector -23.0 35.0 87.6218) (float-vector -19.9186 44.9593 81.8718) (float-vector -11.5 52.25 77.6625) (float-vector 0.0 54.9186 76.1218) (float-vector 11.5 52.25 77.6625) (float-vector 19.9186 44.9593 81.8718)))
         (instance face :init :vertices (list (float-vector 19.9186 32.5407 106.362) (float-vector 19.9186 25.0407 93.3718) (float-vector 23.0 35.0 87.6218) (float-vector 23.0 42.5 100.612)))
         (instance face :init :vertices (list (float-vector 11.5 25.25 110.571) (float-vector 11.5 17.75 97.5811) (float-vector 19.9186 25.0407 93.3718) (float-vector 19.9186 32.5407 106.362)))
         (instance face :init :vertices (list (float-vector 0.0 22.5814 112.112) (float-vector 0.0 15.0814 99.1218) (float-vector 11.5 17.75 97.5811) (float-vector 11.5 25.25 110.571)))
         (instance face :init :vertices (list (float-vector -11.5 25.25 110.571) (float-vector -11.5 17.75 97.5811) (float-vector 0.0 15.0814 99.1218) (float-vector 0.0 22.5814 112.112)))
         (instance face :init :vertices (list (float-vector -19.9186 32.5407 106.362) (float-vector -19.9186 25.0407 93.3718) (float-vector -11.5 17.75 97.5811) (float-vector -11.5 25.25 110.571)))
         (instance face :init :vertices (list (float-vector -23.0 42.5 100.612) (float-vector -23.0 35.0 87.6218) (float-vector -19.9186 25.0407 93.3718) (float-vector -19.9186 32.5407 106.362)))
         (instance face :init :vertices (list (float-vector -19.9186 52.4593 94.8622) (float-vector -19.9186 44.9593 81.8718) (float-vector -23.0 35.0 87.6218) (float-vector -23.0 42.5 100.612)))
         (instance face :init :vertices (list (float-vector -11.5 59.75 90.6529) (float-vector -11.5 52.25 77.6625) (float-vector -19.9186 44.9593 81.8718) (float-vector -19.9186 52.4593 94.8622)))
         (instance face :init :vertices (list (float-vector 0.0 62.4186 89.1122) (float-vector 0.0 54.9186 76.1218) (float-vector -11.5 52.25 77.6625) (float-vector -11.5 59.75 90.6529)))
         (instance face :init :vertices (list (float-vector 11.5 59.75 90.6529) (float-vector 11.5 52.25 77.6625) (float-vector 0.0 54.9186 76.1218) (float-vector 0.0 62.4186 89.1122)))
         (instance face :init :vertices (list (float-vector 19.9186 52.4593 94.8622) (float-vector 19.9186 44.9593 81.8718) (float-vector 11.5 52.25 77.6625) (float-vector 11.5 59.75 90.6529)))
         (instance face :init :vertices (list (float-vector 23.0 42.5 100.612) (float-vector 23.0 35.0 87.6218) (float-vector 19.9186 44.9593 81.8718) (float-vector 19.9186 52.4593 94.8622)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 19.9186 -52.4593 94.8622) (float-vector 23.0 -42.5 100.612) (float-vector 19.9186 -32.5407 106.362) (float-vector 11.5 -25.25 110.571) (float-vector 0.0 -22.5814 112.112) (float-vector -11.5 -25.25 110.571) (float-vector -19.9186 -32.5407 106.362) (float-vector -23.0 -42.5 100.612) (float-vector -19.9186 -52.4593 94.8622) (float-vector -11.5 -59.75 90.6529) (float-vector 0.0 -62.4186 89.1122) (float-vector 11.5 -59.75 90.6529)))
         (instance face :init :vertices (list (float-vector 23.0 -35.0 87.6218) (float-vector 19.9186 -44.9593 81.8718) (float-vector 11.5 -52.25 77.6625) (float-vector 0.0 -54.9186 76.1218) (float-vector -11.5 -52.25 77.6625) (float-vector -19.9186 -44.9593 81.8718) (float-vector -23.0 -35.0 87.6218) (float-vector -19.9186 -25.0407 93.3718) (float-vector -11.5 -17.75 97.5811) (float-vector 0.0 -15.0814 99.1218) (float-vector 11.5 -17.75 97.5811) (float-vector 19.9186 -25.0407 93.3718)))
         (instance face :init :vertices (list (float-vector 19.9186 -52.4593 94.8622) (float-vector 19.9186 -44.9593 81.8718) (float-vector 23.0 -35.0 87.6218) (float-vector 23.0 -42.5 100.612)))
         (instance face :init :vertices (list (float-vector 11.5 -59.75 90.6529) (float-vector 11.5 -52.25 77.6625) (float-vector 19.9186 -44.9593 81.8718) (float-vector 19.9186 -52.4593 94.8622)))
         (instance face :init :vertices (list (float-vector 0.0 -62.4186 89.1122) (float-vector 0.0 -54.9186 76.1218) (float-vector 11.5 -52.25 77.6625) (float-vector 11.5 -59.75 90.6529)))
         (instance face :init :vertices (list (float-vector -11.5 -59.75 90.6529) (float-vector -11.5 -52.25 77.6625) (float-vector 0.0 -54.9186 76.1218) (float-vector 0.0 -62.4186 89.1122)))
         (instance face :init :vertices (list (float-vector -19.9186 -52.4593 94.8622) (float-vector -19.9186 -44.9593 81.8718) (float-vector -11.5 -52.25 77.6625) (float-vector -11.5 -59.75 90.6529)))
         (instance face :init :vertices (list (float-vector -23.0 -42.5 100.612) (float-vector -23.0 -35.0 87.6218) (float-vector -19.9186 -44.9593 81.8718) (float-vector -19.9186 -52.4593 94.8622)))
         (instance face :init :vertices (list (float-vector -19.9186 -32.5407 106.362) (float-vector -19.9186 -25.0407 93.3718) (float-vector -23.0 -35.0 87.6218) (float-vector -23.0 -42.5 100.612)))
         (instance face :init :vertices (list (float-vector -11.5 -25.25 110.571) (float-vector -11.5 -17.75 97.5811) (float-vector -19.9186 -25.0407 93.3718) (float-vector -19.9186 -32.5407 106.362)))
         (instance face :init :vertices (list (float-vector 0.0 -22.5814 112.112) (float-vector 0.0 -15.0814 99.1218) (float-vector -11.5 -17.75 97.5811) (float-vector -11.5 -25.25 110.571)))
         (instance face :init :vertices (list (float-vector 11.5 -25.25 110.571) (float-vector 11.5 -17.75 97.5811) (float-vector 0.0 -15.0814 99.1218) (float-vector 0.0 -22.5814 112.112)))
         (instance face :init :vertices (list (float-vector 19.9186 -32.5407 106.362) (float-vector 19.9186 -25.0407 93.3718) (float-vector 11.5 -17.75 97.5811) (float-vector 11.5 -25.25 110.571)))
         (instance face :init :vertices (list (float-vector 23.0 -42.5 100.612) (float-vector 23.0 -35.0 87.6218) (float-vector 19.9186 -25.0407 93.3718) (float-vector 19.9186 -32.5407 106.362)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 22.5 -46.25 81.1266) (float-vector 25.9808 -35.0 87.6218) (float-vector 22.5 -23.75 94.117) (float-vector 12.9904 -15.5144 98.8718) (float-vector 0.0 -12.5 100.612) (float-vector -12.9904 -15.5144 98.8718) (float-vector -22.5 -23.75 94.117) (float-vector -25.9808 -35.0 87.6218) (float-vector -22.5 -46.25 81.1266) (float-vector -12.9904 -54.4856 76.3718) (float-vector 0.0 -57.5 74.6314) (float-vector 12.9904 -54.4856 76.3718)))
         (instance face :init :vertices (list (float-vector 25.9808 -7.5 39.9904) (float-vector 22.5 -18.75 33.4952) (float-vector 12.9904 -26.9856 28.7404) (float-vector 0.0 -30.0 27.0) (float-vector -12.9904 -26.9856 28.7404) (float-vector -22.5 -18.75 33.4952) (float-vector -25.9808 -7.5 39.9904) (float-vector -22.5 3.75 46.4856) (float-vector -12.9904 11.9856 51.2404) (float-vector 0.0 15.0 52.9808) (float-vector 12.9904 11.9856 51.2404) (float-vector 22.5 3.75 46.4856)))
         (instance face :init :vertices (list (float-vector 22.5 -46.25 81.1266) (float-vector 22.5 -18.75 33.4952) (float-vector 25.9808 -7.5 39.9904) (float-vector 25.9808 -35.0 87.6218)))
         (instance face :init :vertices (list (float-vector 12.9904 -54.4856 76.3718) (float-vector 12.9904 -26.9856 28.7404) (float-vector 22.5 -18.75 33.4952) (float-vector 22.5 -46.25 81.1266)))
         (instance face :init :vertices (list (float-vector 0.0 -57.5 74.6314) (float-vector 0.0 -30.0 27.0) (float-vector 12.9904 -26.9856 28.7404) (float-vector 12.9904 -54.4856 76.3718)))
         (instance face :init :vertices (list (float-vector -12.9904 -54.4856 76.3718) (float-vector -12.9904 -26.9856 28.7404) (float-vector 0.0 -30.0 27.0) (float-vector 0.0 -57.5 74.6314)))
         (instance face :init :vertices (list (float-vector -22.5 -46.25 81.1266) (float-vector -22.5 -18.75 33.4952) (float-vector -12.9904 -26.9856 28.7404) (float-vector -12.9904 -54.4856 76.3718)))
         (instance face :init :vertices (list (float-vector -25.9808 -35.0 87.6218) (float-vector -25.9808 -7.5 39.9904) (float-vector -22.5 -18.75 33.4952) (float-vector -22.5 -46.25 81.1266)))
         (instance face :init :vertices (list (float-vector -22.5 -23.75 94.117) (float-vector -22.5 3.75 46.4856) (float-vector -25.9808 -7.5 39.9904) (float-vector -25.9808 -35.0 87.6218)))
         (instance face :init :vertices (list (float-vector -12.9904 -15.5144 98.8718) (float-vector -12.9904 11.9856 51.2404) (float-vector -22.5 3.75 46.4856) (float-vector -22.5 -23.75 94.117)))
         (instance face :init :vertices (list (float-vector 0.0 -12.5 100.612) (float-vector 0.0 15.0 52.9808) (float-vector -12.9904 11.9856 51.2404) (float-vector -12.9904 -15.5144 98.8718)))
         (instance face :init :vertices (list (float-vector 12.9904 -15.5144 98.8718) (float-vector 12.9904 11.9856 51.2404) (float-vector 0.0 15.0 52.9808) (float-vector 0.0 -12.5 100.612)))
         (instance face :init :vertices (list (float-vector 22.5 -23.75 94.117) (float-vector 22.5 3.75 46.4856) (float-vector 12.9904 11.9856 51.2404) (float-vector 12.9904 -15.5144 98.8718)))
         (instance face :init :vertices (list (float-vector 25.9808 -35.0 87.6218) (float-vector 25.9808 -7.5 39.9904) (float-vector 22.5 3.75 46.4856) (float-vector 22.5 -23.75 94.117)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 22.5 23.75 94.117) (float-vector 25.9808 35.0 87.6218) (float-vector 22.5 46.25 81.1266) (float-vector 12.9904 54.4856 76.3718) (float-vector 0.0 57.5 74.6314) (float-vector -12.9904 54.4856 76.3718) (float-vector -22.5 46.25 81.1266) (float-vector -25.9808 35.0 87.6218) (float-vector -22.5 23.75 94.117) (float-vector -12.9904 15.5144 98.8718) (float-vector 0.0 12.5 100.612) (float-vector 12.9904 15.5144 98.8718)))
         (instance face :init :vertices (list (float-vector 25.9808 7.5 39.9904) (float-vector 22.5 -3.75 46.4856) (float-vector 12.9904 -11.9856 51.2404) (float-vector 0.0 -15.0 52.9808) (float-vector -12.9904 -11.9856 51.2404) (float-vector -22.5 -3.75 46.4856) (float-vector -25.9808 7.5 39.9904) (float-vector -22.5 18.75 33.4952) (float-vector -12.9904 26.9856 28.7404) (float-vector 0.0 30.0 27.0) (float-vector 12.9904 26.9856 28.7404) (float-vector 22.5 18.75 33.4952)))
         (instance face :init :vertices (list (float-vector 22.5 23.75 94.117) (float-vector 22.5 -3.75 46.4856) (float-vector 25.9808 7.5 39.9904) (float-vector 25.9808 35.0 87.6218)))
         (instance face :init :vertices (list (float-vector 12.9904 15.5144 98.8718) (float-vector 12.9904 -11.9856 51.2404) (float-vector 22.5 -3.75 46.4856) (float-vector 22.5 23.75 94.117)))
         (instance face :init :vertices (list (float-vector 0.0 12.5 100.612) (float-vector 0.0 -15.0 52.9808) (float-vector 12.9904 -11.9856 51.2404) (float-vector 12.9904 15.5144 98.8718)))
         (instance face :init :vertices (list (float-vector -12.9904 15.5144 98.8718) (float-vector -12.9904 -11.9856 51.2404) (float-vector 0.0 -15.0 52.9808) (float-vector 0.0 12.5 100.612)))
         (instance face :init :vertices (list (float-vector -22.5 23.75 94.117) (float-vector -22.5 -3.75 46.4856) (float-vector -12.9904 -11.9856 51.2404) (float-vector -12.9904 15.5144 98.8718)))
         (instance face :init :vertices (list (float-vector -25.9808 35.0 87.6218) (float-vector -25.9808 7.5 39.9904) (float-vector -22.5 -3.75 46.4856) (float-vector -22.5 23.75 94.117)))
         (instance face :init :vertices (list (float-vector -22.5 46.25 81.1266) (float-vector -22.5 18.75 33.4952) (float-vector -25.9808 7.5 39.9904) (float-vector -25.9808 35.0 87.6218)))
         (instance face :init :vertices (list (float-vector -12.9904 54.4856 76.3718) (float-vector -12.9904 26.9856 28.7404) (float-vector -22.5 18.75 33.4952) (float-vector -22.5 46.25 81.1266)))
         (instance face :init :vertices (list (float-vector 0.0 57.5 74.6314) (float-vector 0.0 30.0 27.0) (float-vector -12.9904 26.9856 28.7404) (float-vector -12.9904 54.4856 76.3718)))
         (instance face :init :vertices (list (float-vector 12.9904 54.4856 76.3718) (float-vector 12.9904 26.9856 28.7404) (float-vector 0.0 30.0 27.0) (float-vector 0.0 57.5 74.6314)))
         (instance face :init :vertices (list (float-vector 22.5 46.25 81.1266) (float-vector 22.5 18.75 33.4952) (float-vector 12.9904 26.9856 28.7404) (float-vector 12.9904 54.4856 76.3718)))
         (instance face :init :vertices (list (float-vector 25.9808 35.0 87.6218) (float-vector 25.9808 7.5 39.9904) (float-vector 22.5 18.75 33.4952) (float-vector 22.5 46.25 81.1266)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :gray50)
     (send (elt bc 1) :set-color :red)
     (send (elt bc 2) :set-color :gray50)
     (send (elt bc 3) :set-color :gray50)
     (send (elt bc 4) :set-color :red)
     (send (elt bc 5) :set-color :red)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root-link :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 0.0 -42.5 100.612) :rot #2f((-6.938894e-17 -1.110223e-16 1.0) (0.5 0.866025 1.110223e-16) (-0.866025 0.5 1.387779e-17)) :name "handle0"))
     (send blink0 :assoc handle0)
     (setq handle1 (make-cascoords :pos (float-vector 0.0 42.5 100.612) :rot #2f((1.526557e-16 0.0 1.0) (-0.5 0.866025 8.326673e-17) (-0.866025 -0.5 1.249001e-16)) :name "handle1"))
     (send blink0 :assoc handle1)

     ;; init-ending 
     (setq links (list blink0))
     (setq joint-list (list))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:handle (&rest args) (forward-message-to-all (list  handle0 handle1) args))
  (:handle-handle0 (&rest args) (forward-message-to handle0 args))
  (:handle-handle1 (&rest args) (forward-message-to handle1 args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun drcbox-fire-hose-fitting (&rest args) (instance* drcbox-fire-hose-fitting-object :init args))
;; (format *error-output* "(instance drcbox-fire-hose-fitting-object :init) for generating model~%")
