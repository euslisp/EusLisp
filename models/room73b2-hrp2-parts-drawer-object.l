;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room73b2-hrp2-parts-drawer-object
  :super cascaded-link
  :slots (sensors
         handle0 handle1 handle2 handle3 handle4 handle5
         joint0 joint1 joint2 joint3 joint4 ))
(defmethod room73b2-hrp2-parts-drawer-object
  (:init
   (&rest args &key (name "room73b2-hrp2-parts-drawer") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 190.0 400.0 1130.0) (float-vector -210.0 400.0 1130.0) (float-vector -210.0 -400.0 1130.0) (float-vector 190.0 -400.0 1130.0)))
         (instance face :init :vertices (list (float-vector -210.0 400.0 1120.0) (float-vector 190.0 400.0 1120.0) (float-vector 190.0 -400.0 1120.0) (float-vector -210.0 -400.0 1120.0)))
         (instance face :init :vertices (list (float-vector 190.0 400.0 1130.0) (float-vector 190.0 400.0 1120.0) (float-vector -210.0 400.0 1120.0) (float-vector -210.0 400.0 1130.0)))
         (instance face :init :vertices (list (float-vector 190.0 -400.0 1130.0) (float-vector 190.0 -400.0 1120.0) (float-vector 190.0 400.0 1120.0) (float-vector 190.0 400.0 1130.0)))
         (instance face :init :vertices (list (float-vector -210.0 -400.0 1130.0) (float-vector -210.0 -400.0 1120.0) (float-vector 190.0 -400.0 1120.0) (float-vector 190.0 -400.0 1130.0)))
         (instance face :init :vertices (list (float-vector -210.0 400.0 1130.0) (float-vector -210.0 400.0 1120.0) (float-vector -210.0 -400.0 1120.0) (float-vector -210.0 -400.0 1130.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 190.0 400.0 30.0) (float-vector -210.0 400.0 30.0) (float-vector -210.0 -400.0 30.0) (float-vector 190.0 -400.0 30.0)))
         (instance face :init :vertices (list (float-vector -210.0 400.0 0.0) (float-vector 190.0 400.0 0.0) (float-vector 190.0 -400.0 0.0) (float-vector -210.0 -400.0 0.0)))
         (instance face :init :vertices (list (float-vector 190.0 400.0 30.0) (float-vector 190.0 400.0 0.0) (float-vector -210.0 400.0 0.0) (float-vector -210.0 400.0 30.0)))
         (instance face :init :vertices (list (float-vector 190.0 -400.0 30.0) (float-vector 190.0 -400.0 0.0) (float-vector 190.0 400.0 0.0) (float-vector 190.0 400.0 30.0)))
         (instance face :init :vertices (list (float-vector -210.0 -400.0 30.0) (float-vector -210.0 -400.0 0.0) (float-vector 190.0 -400.0 0.0) (float-vector 190.0 -400.0 30.0)))
         (instance face :init :vertices (list (float-vector -210.0 400.0 30.0) (float-vector -210.0 400.0 0.0) (float-vector -210.0 -400.0 0.0) (float-vector -210.0 -400.0 30.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -200.0 390.0 1120.0) (float-vector -210.0 390.0 1120.0) (float-vector -210.0 -390.0 1120.0) (float-vector -200.0 -390.0 1120.0)))
         (instance face :init :vertices (list (float-vector -210.0 390.0 30.0) (float-vector -200.0 390.0 30.0) (float-vector -200.0 -390.0 30.0) (float-vector -210.0 -390.0 30.0)))
         (instance face :init :vertices (list (float-vector -200.0 390.0 1120.0) (float-vector -200.0 390.0 30.0) (float-vector -210.0 390.0 30.0) (float-vector -210.0 390.0 1120.0)))
         (instance face :init :vertices (list (float-vector -200.0 -390.0 1120.0) (float-vector -200.0 -390.0 30.0) (float-vector -200.0 390.0 30.0) (float-vector -200.0 390.0 1120.0)))
         (instance face :init :vertices (list (float-vector -210.0 -390.0 1120.0) (float-vector -210.0 -390.0 30.0) (float-vector -200.0 -390.0 30.0) (float-vector -200.0 -390.0 1120.0)))
         (instance face :init :vertices (list (float-vector -210.0 390.0 1120.0) (float-vector -210.0 390.0 30.0) (float-vector -210.0 -390.0 30.0) (float-vector -210.0 -390.0 1120.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 190.0 400.0 1120.0) (float-vector -210.0 400.0 1120.0) (float-vector -210.0 390.0 1120.0) (float-vector 190.0 390.0 1120.0)))
         (instance face :init :vertices (list (float-vector -210.0 400.0 30.0) (float-vector 190.0 400.0 30.0) (float-vector 190.0 390.0 30.0) (float-vector -210.0 390.0 30.0)))
         (instance face :init :vertices (list (float-vector 190.0 400.0 1120.0) (float-vector 190.0 400.0 30.0) (float-vector -210.0 400.0 30.0) (float-vector -210.0 400.0 1120.0)))
         (instance face :init :vertices (list (float-vector 190.0 390.0 1120.0) (float-vector 190.0 390.0 30.0) (float-vector 190.0 400.0 30.0) (float-vector 190.0 400.0 1120.0)))
         (instance face :init :vertices (list (float-vector -210.0 390.0 1120.0) (float-vector -210.0 390.0 30.0) (float-vector 190.0 390.0 30.0) (float-vector 190.0 390.0 1120.0)))
         (instance face :init :vertices (list (float-vector -210.0 400.0 1120.0) (float-vector -210.0 400.0 30.0) (float-vector -210.0 390.0 30.0) (float-vector -210.0 390.0 1120.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 190.0 -390.0 1120.0) (float-vector -210.0 -390.0 1120.0) (float-vector -210.0 -400.0 1120.0) (float-vector 190.0 -400.0 1120.0)))
         (instance face :init :vertices (list (float-vector -210.0 -390.0 30.0) (float-vector 190.0 -390.0 30.0) (float-vector 190.0 -400.0 30.0) (float-vector -210.0 -400.0 30.0)))
         (instance face :init :vertices (list (float-vector 190.0 -390.0 1120.0) (float-vector 190.0 -390.0 30.0) (float-vector -210.0 -390.0 30.0) (float-vector -210.0 -390.0 1120.0)))
         (instance face :init :vertices (list (float-vector 190.0 -400.0 1120.0) (float-vector 190.0 -400.0 30.0) (float-vector 190.0 -390.0 30.0) (float-vector 190.0 -390.0 1120.0)))
         (instance face :init :vertices (list (float-vector -210.0 -400.0 1120.0) (float-vector -210.0 -400.0 30.0) (float-vector 190.0 -400.0 30.0) (float-vector 190.0 -400.0 1120.0)))
         (instance face :init :vertices (list (float-vector -210.0 -390.0 1120.0) (float-vector -210.0 -390.0 30.0) (float-vector -210.0 -400.0 30.0) (float-vector -210.0 -400.0 1120.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 190.0 390.0 402.5) (float-vector -200.0 390.0 402.5) (float-vector -200.0 -390.0 402.5) (float-vector 190.0 -390.0 402.5)))
         (instance face :init :vertices (list (float-vector -200.0 390.0 392.5) (float-vector 190.0 390.0 392.5) (float-vector 190.0 -390.0 392.5) (float-vector -200.0 -390.0 392.5)))
         (instance face :init :vertices (list (float-vector 190.0 390.0 402.5) (float-vector 190.0 390.0 392.5) (float-vector -200.0 390.0 392.5) (float-vector -200.0 390.0 402.5)))
         (instance face :init :vertices (list (float-vector 190.0 -390.0 402.5) (float-vector 190.0 -390.0 392.5) (float-vector 190.0 390.0 392.5) (float-vector 190.0 390.0 402.5)))
         (instance face :init :vertices (list (float-vector -200.0 -390.0 402.5) (float-vector -200.0 -390.0 392.5) (float-vector 190.0 -390.0 392.5) (float-vector 190.0 -390.0 402.5)))
         (instance face :init :vertices (list (float-vector -200.0 390.0 402.5) (float-vector -200.0 390.0 392.5) (float-vector -200.0 -390.0 392.5) (float-vector -200.0 -390.0 402.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 190.0 390.0 585.0) (float-vector -200.0 390.0 585.0) (float-vector -200.0 -390.0 585.0) (float-vector 190.0 -390.0 585.0)))
         (instance face :init :vertices (list (float-vector -200.0 390.0 575.0) (float-vector 190.0 390.0 575.0) (float-vector 190.0 -390.0 575.0) (float-vector -200.0 -390.0 575.0)))
         (instance face :init :vertices (list (float-vector 190.0 390.0 585.0) (float-vector 190.0 390.0 575.0) (float-vector -200.0 390.0 575.0) (float-vector -200.0 390.0 585.0)))
         (instance face :init :vertices (list (float-vector 190.0 -390.0 585.0) (float-vector 190.0 -390.0 575.0) (float-vector 190.0 390.0 575.0) (float-vector 190.0 390.0 585.0)))
         (instance face :init :vertices (list (float-vector -200.0 -390.0 585.0) (float-vector -200.0 -390.0 575.0) (float-vector 190.0 -390.0 575.0) (float-vector 190.0 -390.0 585.0)))
         (instance face :init :vertices (list (float-vector -200.0 390.0 585.0) (float-vector -200.0 390.0 575.0) (float-vector -200.0 -390.0 575.0) (float-vector -200.0 -390.0 585.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 190.0 390.0 767.5) (float-vector -200.0 390.0 767.5) (float-vector -200.0 -390.0 767.5) (float-vector 190.0 -390.0 767.5)))
         (instance face :init :vertices (list (float-vector -200.0 390.0 757.5) (float-vector 190.0 390.0 757.5) (float-vector 190.0 -390.0 757.5) (float-vector -200.0 -390.0 757.5)))
         (instance face :init :vertices (list (float-vector 190.0 390.0 767.5) (float-vector 190.0 390.0 757.5) (float-vector -200.0 390.0 757.5) (float-vector -200.0 390.0 767.5)))
         (instance face :init :vertices (list (float-vector 190.0 -390.0 767.5) (float-vector 190.0 -390.0 757.5) (float-vector 190.0 390.0 757.5) (float-vector 190.0 390.0 767.5)))
         (instance face :init :vertices (list (float-vector -200.0 -390.0 767.5) (float-vector -200.0 -390.0 757.5) (float-vector 190.0 -390.0 757.5) (float-vector 190.0 -390.0 767.5)))
         (instance face :init :vertices (list (float-vector -200.0 390.0 767.5) (float-vector -200.0 390.0 757.5) (float-vector -200.0 -390.0 757.5) (float-vector -200.0 -390.0 767.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 190.0 390.0 950.0) (float-vector -200.0 390.0 950.0) (float-vector -200.0 -390.0 950.0) (float-vector 190.0 -390.0 950.0)))
         (instance face :init :vertices (list (float-vector -200.0 390.0 940.0) (float-vector 190.0 390.0 940.0) (float-vector 190.0 -390.0 940.0) (float-vector -200.0 -390.0 940.0)))
         (instance face :init :vertices (list (float-vector 190.0 390.0 950.0) (float-vector 190.0 390.0 940.0) (float-vector -200.0 390.0 940.0) (float-vector -200.0 390.0 950.0)))
         (instance face :init :vertices (list (float-vector 190.0 -390.0 950.0) (float-vector 190.0 -390.0 940.0) (float-vector 190.0 390.0 940.0) (float-vector 190.0 390.0 950.0)))
         (instance face :init :vertices (list (float-vector -200.0 -390.0 950.0) (float-vector -200.0 -390.0 940.0) (float-vector 190.0 -390.0 940.0) (float-vector 190.0 -390.0 950.0)))
         (instance face :init :vertices (list (float-vector -200.0 390.0 950.0) (float-vector -200.0 390.0 940.0) (float-vector -200.0 -390.0 940.0) (float-vector -200.0 -390.0 950.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :burlywood1)
     (send (elt bc 1) :set-color :burlywood1)
     (send (elt bc 2) :set-color :burlywood1)
     (send (elt bc 3) :set-color :burlywood1)
     (send (elt bc 4) :set-color :burlywood1)
     (send (elt bc 5) :set-color :burlywood1)
     (send (elt bc 6) :set-color :burlywood1)
     (send (elt bc 7) :set-color :burlywood1)
     (send (elt bc 8) :set-color :burlywood1)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-hrp2-parts-drawer-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -195.0 372.5 -82.5) (float-vector -195.0 -372.5 -82.5) (float-vector -195.0 -372.5 82.5) (float-vector -195.0 372.5 82.5)))
         (instance face :init :vertices (list (float-vector 195.0 -372.5 -82.5) (float-vector 195.0 -372.5 82.5) (float-vector -195.0 -372.5 82.5) (float-vector -195.0 -372.5 -82.5)))
         (instance face :init :vertices (list (float-vector 195.0 372.5 -82.5) (float-vector 195.0 372.5 82.5) (float-vector 195.0 357.5 82.5) (float-vector 195.0 357.5 -67.5) (float-vector 195.0 -357.5 -67.5) (float-vector 195.0 -357.5 82.5) (float-vector 195.0 -372.5 82.5) (float-vector 195.0 -372.5 -82.5)))
         (instance face :init :vertices (list (float-vector -195.0 372.5 82.5) (float-vector -195.0 -372.5 82.5) (float-vector 195.0 -372.5 82.5) (float-vector 195.0 -357.5 82.5) (float-vector -180.0 -357.5 82.5) (float-vector -180.0 357.5 82.5) (float-vector 195.0 357.5 82.5) (float-vector 195.0 372.5 82.5)))
         (instance face :init :vertices (list (float-vector 195.0 372.5 -82.5) (float-vector 195.0 -372.5 -82.5) (float-vector -195.0 -372.5 -82.5) (float-vector -195.0 372.5 -82.5)))
         (instance face :init :vertices (list (float-vector -195.0 372.5 -82.5) (float-vector -195.0 372.5 82.5) (float-vector 195.0 372.5 82.5) (float-vector 195.0 372.5 -82.5)))
         (instance face :init :vertices (list (float-vector -180.0 357.5 82.5) (float-vector -180.0 -357.5 82.5) (float-vector -180.0 -357.5 -67.5) (float-vector -180.0 357.5 -67.5)))
         (instance face :init :vertices (list (float-vector -180.0 -357.5 -67.5) (float-vector -180.0 -357.5 82.5) (float-vector 195.0 -357.5 82.5) (float-vector 195.0 -357.5 -67.5)))
         (instance face :init :vertices (list (float-vector 195.0 357.5 -67.5) (float-vector 195.0 357.5 82.5) (float-vector -180.0 357.5 82.5) (float-vector -180.0 357.5 -67.5)))
         (instance face :init :vertices (list (float-vector -180.0 357.5 -67.5) (float-vector -180.0 -357.5 -67.5) (float-vector 195.0 -357.5 -67.5) (float-vector 195.0 357.5 -67.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 210.5 387.5 98.0) (float-vector 195.5 387.5 98.0) (float-vector 195.5 -387.5 98.0) (float-vector 210.5 -387.5 98.0)))
         (instance face :init :vertices (list (float-vector 195.5 387.5 -82.0) (float-vector 210.5 387.5 -82.0) (float-vector 210.5 -387.5 -82.0) (float-vector 195.5 -387.5 -82.0)))
         (instance face :init :vertices (list (float-vector 210.5 387.5 98.0) (float-vector 210.5 387.5 -82.0) (float-vector 195.5 387.5 -82.0) (float-vector 195.5 387.5 98.0)))
         (instance face :init :vertices (list (float-vector 210.5 -387.5 98.0) (float-vector 210.5 -387.5 -82.0) (float-vector 210.5 387.5 -82.0) (float-vector 210.5 387.5 98.0)))
         (instance face :init :vertices (list (float-vector 195.5 -387.5 98.0) (float-vector 195.5 -387.5 -82.0) (float-vector 210.5 -387.5 -82.0) (float-vector 210.5 -387.5 98.0)))
         (instance face :init :vertices (list (float-vector 195.5 387.5 98.0) (float-vector 195.5 387.5 -82.0) (float-vector 195.5 -387.5 -82.0) (float-vector 195.5 -387.5 98.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 237.33 -120.0 5.5) (float-vector 238.0 -120.0 8.0) (float-vector 237.33 -120.0 10.5) (float-vector 235.5 -120.0 12.3301) (float-vector 233.0 -120.0 13.0) (float-vector 230.5 -120.0 12.3301) (float-vector 228.67 -120.0 10.5) (float-vector 228.0 -120.0 8.0) (float-vector 228.67 -120.0 5.5) (float-vector 230.5 -120.0 3.66987) (float-vector 233.0 -120.0 3.0) (float-vector 235.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 238.0 120.0 8.0) (float-vector 237.33 120.0 5.5) (float-vector 235.5 120.0 3.66987) (float-vector 233.0 120.0 3.0) (float-vector 230.5 120.0 3.66987) (float-vector 228.67 120.0 5.5) (float-vector 228.0 120.0 8.0) (float-vector 228.67 120.0 10.5) (float-vector 230.5 120.0 12.3301) (float-vector 233.0 120.0 13.0) (float-vector 235.5 120.0 12.3301) (float-vector 237.33 120.0 10.5)))
         (instance face :init :vertices (list (float-vector 237.33 -120.0 5.5) (float-vector 237.33 120.0 5.5) (float-vector 238.0 120.0 8.0) (float-vector 238.0 -120.0 8.0)))
         (instance face :init :vertices (list (float-vector 235.5 -120.0 3.66987) (float-vector 235.5 120.0 3.66987) (float-vector 237.33 120.0 5.5) (float-vector 237.33 -120.0 5.5)))
         (instance face :init :vertices (list (float-vector 233.0 -120.0 3.0) (float-vector 233.0 120.0 3.0) (float-vector 235.5 120.0 3.66987) (float-vector 235.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 230.5 -120.0 3.66987) (float-vector 230.5 120.0 3.66987) (float-vector 233.0 120.0 3.0) (float-vector 233.0 -120.0 3.0)))
         (instance face :init :vertices (list (float-vector 228.67 -120.0 5.5) (float-vector 228.67 120.0 5.5) (float-vector 230.5 120.0 3.66987) (float-vector 230.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 228.0 -120.0 8.0) (float-vector 228.0 120.0 8.0) (float-vector 228.67 120.0 5.5) (float-vector 228.67 -120.0 5.5)))
         (instance face :init :vertices (list (float-vector 228.67 -120.0 10.5) (float-vector 228.67 120.0 10.5) (float-vector 228.0 120.0 8.0) (float-vector 228.0 -120.0 8.0)))
         (instance face :init :vertices (list (float-vector 230.5 -120.0 12.3301) (float-vector 230.5 120.0 12.3301) (float-vector 228.67 120.0 10.5) (float-vector 228.67 -120.0 10.5)))
         (instance face :init :vertices (list (float-vector 233.0 -120.0 13.0) (float-vector 233.0 120.0 13.0) (float-vector 230.5 120.0 12.3301) (float-vector 230.5 -120.0 12.3301)))
         (instance face :init :vertices (list (float-vector 235.5 -120.0 12.3301) (float-vector 235.5 120.0 12.3301) (float-vector 233.0 120.0 13.0) (float-vector 233.0 -120.0 13.0)))
         (instance face :init :vertices (list (float-vector 237.33 -120.0 10.5) (float-vector 237.33 120.0 10.5) (float-vector 235.5 120.0 12.3301) (float-vector 235.5 -120.0 12.3301)))
         (instance face :init :vertices (list (float-vector 238.0 -120.0 8.0) (float-vector 238.0 120.0 8.0) (float-vector 237.33 120.0 10.5) (float-vector 237.33 -120.0 10.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 233.0 120.0 12.0) (float-vector 203.0 120.0 12.0) (float-vector 203.0 105.0 12.0) (float-vector 233.0 105.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 120.0 4.0) (float-vector 233.0 120.0 4.0) (float-vector 233.0 105.0 4.0) (float-vector 203.0 105.0 4.0)))
         (instance face :init :vertices (list (float-vector 233.0 120.0 12.0) (float-vector 233.0 120.0 4.0) (float-vector 203.0 120.0 4.0) (float-vector 203.0 120.0 12.0)))
         (instance face :init :vertices (list (float-vector 233.0 105.0 12.0) (float-vector 233.0 105.0 4.0) (float-vector 233.0 120.0 4.0) (float-vector 233.0 120.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 105.0 12.0) (float-vector 203.0 105.0 4.0) (float-vector 233.0 105.0 4.0) (float-vector 233.0 105.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 120.0 12.0) (float-vector 203.0 120.0 4.0) (float-vector 203.0 105.0 4.0) (float-vector 203.0 105.0 12.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 233.0 -105.0 12.0) (float-vector 203.0 -105.0 12.0) (float-vector 203.0 -120.0 12.0) (float-vector 233.0 -120.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 -105.0 4.0) (float-vector 233.0 -105.0 4.0) (float-vector 233.0 -120.0 4.0) (float-vector 203.0 -120.0 4.0)))
         (instance face :init :vertices (list (float-vector 233.0 -105.0 12.0) (float-vector 233.0 -105.0 4.0) (float-vector 203.0 -105.0 4.0) (float-vector 203.0 -105.0 12.0)))
         (instance face :init :vertices (list (float-vector 233.0 -120.0 12.0) (float-vector 233.0 -120.0 4.0) (float-vector 233.0 -105.0 4.0) (float-vector 233.0 -105.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 -120.0 12.0) (float-vector 203.0 -120.0 4.0) (float-vector 233.0 -120.0 4.0) (float-vector 233.0 -120.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 -105.0 12.0) (float-vector 203.0 -105.0 4.0) (float-vector 203.0 -120.0 4.0) (float-vector 203.0 -120.0 12.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :burlywood1)
     (send (elt bc 2) :set-color :gray)
     (send (elt bc 3) :set-color :gray)
     (send (elt bc 4) :set-color :gray)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-hrp2-parts-drawer-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-hrp2-parts-drawer-bodyset3
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -195.0 372.5 -82.5) (float-vector -195.0 -372.5 -82.5) (float-vector -195.0 -372.5 82.5) (float-vector -195.0 372.5 82.5)))
         (instance face :init :vertices (list (float-vector 195.0 -372.5 -82.5) (float-vector 195.0 -372.5 82.5) (float-vector -195.0 -372.5 82.5) (float-vector -195.0 -372.5 -82.5)))
         (instance face :init :vertices (list (float-vector 195.0 372.5 -82.5) (float-vector 195.0 372.5 82.5) (float-vector 195.0 357.5 82.5) (float-vector 195.0 357.5 -67.5) (float-vector 195.0 -357.5 -67.5) (float-vector 195.0 -357.5 82.5) (float-vector 195.0 -372.5 82.5) (float-vector 195.0 -372.5 -82.5)))
         (instance face :init :vertices (list (float-vector -195.0 372.5 82.5) (float-vector -195.0 -372.5 82.5) (float-vector 195.0 -372.5 82.5) (float-vector 195.0 -357.5 82.5) (float-vector -180.0 -357.5 82.5) (float-vector -180.0 357.5 82.5) (float-vector 195.0 357.5 82.5) (float-vector 195.0 372.5 82.5)))
         (instance face :init :vertices (list (float-vector 195.0 372.5 -82.5) (float-vector 195.0 -372.5 -82.5) (float-vector -195.0 -372.5 -82.5) (float-vector -195.0 372.5 -82.5)))
         (instance face :init :vertices (list (float-vector -195.0 372.5 -82.5) (float-vector -195.0 372.5 82.5) (float-vector 195.0 372.5 82.5) (float-vector 195.0 372.5 -82.5)))
         (instance face :init :vertices (list (float-vector -180.0 357.5 82.5) (float-vector -180.0 -357.5 82.5) (float-vector -180.0 -357.5 -67.5) (float-vector -180.0 357.5 -67.5)))
         (instance face :init :vertices (list (float-vector -180.0 -357.5 -67.5) (float-vector -180.0 -357.5 82.5) (float-vector 195.0 -357.5 82.5) (float-vector 195.0 -357.5 -67.5)))
         (instance face :init :vertices (list (float-vector 195.0 357.5 -67.5) (float-vector 195.0 357.5 82.5) (float-vector -180.0 357.5 82.5) (float-vector -180.0 357.5 -67.5)))
         (instance face :init :vertices (list (float-vector -180.0 357.5 -67.5) (float-vector -180.0 -357.5 -67.5) (float-vector 195.0 -357.5 -67.5) (float-vector 195.0 357.5 -67.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 210.5 387.5 98.0) (float-vector 195.5 387.5 98.0) (float-vector 195.5 -387.5 98.0) (float-vector 210.5 -387.5 98.0)))
         (instance face :init :vertices (list (float-vector 195.5 387.5 -82.0) (float-vector 210.5 387.5 -82.0) (float-vector 210.5 -387.5 -82.0) (float-vector 195.5 -387.5 -82.0)))
         (instance face :init :vertices (list (float-vector 210.5 387.5 98.0) (float-vector 210.5 387.5 -82.0) (float-vector 195.5 387.5 -82.0) (float-vector 195.5 387.5 98.0)))
         (instance face :init :vertices (list (float-vector 210.5 -387.5 98.0) (float-vector 210.5 -387.5 -82.0) (float-vector 210.5 387.5 -82.0) (float-vector 210.5 387.5 98.0)))
         (instance face :init :vertices (list (float-vector 195.5 -387.5 98.0) (float-vector 195.5 -387.5 -82.0) (float-vector 210.5 -387.5 -82.0) (float-vector 210.5 -387.5 98.0)))
         (instance face :init :vertices (list (float-vector 195.5 387.5 98.0) (float-vector 195.5 387.5 -82.0) (float-vector 195.5 -387.5 -82.0) (float-vector 195.5 -387.5 98.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 237.33 -120.0 5.5) (float-vector 238.0 -120.0 8.0) (float-vector 237.33 -120.0 10.5) (float-vector 235.5 -120.0 12.3301) (float-vector 233.0 -120.0 13.0) (float-vector 230.5 -120.0 12.3301) (float-vector 228.67 -120.0 10.5) (float-vector 228.0 -120.0 8.0) (float-vector 228.67 -120.0 5.5) (float-vector 230.5 -120.0 3.66987) (float-vector 233.0 -120.0 3.0) (float-vector 235.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 238.0 120.0 8.0) (float-vector 237.33 120.0 5.5) (float-vector 235.5 120.0 3.66987) (float-vector 233.0 120.0 3.0) (float-vector 230.5 120.0 3.66987) (float-vector 228.67 120.0 5.5) (float-vector 228.0 120.0 8.0) (float-vector 228.67 120.0 10.5) (float-vector 230.5 120.0 12.3301) (float-vector 233.0 120.0 13.0) (float-vector 235.5 120.0 12.3301) (float-vector 237.33 120.0 10.5)))
         (instance face :init :vertices (list (float-vector 237.33 -120.0 5.5) (float-vector 237.33 120.0 5.5) (float-vector 238.0 120.0 8.0) (float-vector 238.0 -120.0 8.0)))
         (instance face :init :vertices (list (float-vector 235.5 -120.0 3.66987) (float-vector 235.5 120.0 3.66987) (float-vector 237.33 120.0 5.5) (float-vector 237.33 -120.0 5.5)))
         (instance face :init :vertices (list (float-vector 233.0 -120.0 3.0) (float-vector 233.0 120.0 3.0) (float-vector 235.5 120.0 3.66987) (float-vector 235.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 230.5 -120.0 3.66987) (float-vector 230.5 120.0 3.66987) (float-vector 233.0 120.0 3.0) (float-vector 233.0 -120.0 3.0)))
         (instance face :init :vertices (list (float-vector 228.67 -120.0 5.5) (float-vector 228.67 120.0 5.5) (float-vector 230.5 120.0 3.66987) (float-vector 230.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 228.0 -120.0 8.0) (float-vector 228.0 120.0 8.0) (float-vector 228.67 120.0 5.5) (float-vector 228.67 -120.0 5.5)))
         (instance face :init :vertices (list (float-vector 228.67 -120.0 10.5) (float-vector 228.67 120.0 10.5) (float-vector 228.0 120.0 8.0) (float-vector 228.0 -120.0 8.0)))
         (instance face :init :vertices (list (float-vector 230.5 -120.0 12.3301) (float-vector 230.5 120.0 12.3301) (float-vector 228.67 120.0 10.5) (float-vector 228.67 -120.0 10.5)))
         (instance face :init :vertices (list (float-vector 233.0 -120.0 13.0) (float-vector 233.0 120.0 13.0) (float-vector 230.5 120.0 12.3301) (float-vector 230.5 -120.0 12.3301)))
         (instance face :init :vertices (list (float-vector 235.5 -120.0 12.3301) (float-vector 235.5 120.0 12.3301) (float-vector 233.0 120.0 13.0) (float-vector 233.0 -120.0 13.0)))
         (instance face :init :vertices (list (float-vector 237.33 -120.0 10.5) (float-vector 237.33 120.0 10.5) (float-vector 235.5 120.0 12.3301) (float-vector 235.5 -120.0 12.3301)))
         (instance face :init :vertices (list (float-vector 238.0 -120.0 8.0) (float-vector 238.0 120.0 8.0) (float-vector 237.33 120.0 10.5) (float-vector 237.33 -120.0 10.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 233.0 120.0 12.0) (float-vector 203.0 120.0 12.0) (float-vector 203.0 105.0 12.0) (float-vector 233.0 105.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 120.0 4.0) (float-vector 233.0 120.0 4.0) (float-vector 233.0 105.0 4.0) (float-vector 203.0 105.0 4.0)))
         (instance face :init :vertices (list (float-vector 233.0 120.0 12.0) (float-vector 233.0 120.0 4.0) (float-vector 203.0 120.0 4.0) (float-vector 203.0 120.0 12.0)))
         (instance face :init :vertices (list (float-vector 233.0 105.0 12.0) (float-vector 233.0 105.0 4.0) (float-vector 233.0 120.0 4.0) (float-vector 233.0 120.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 105.0 12.0) (float-vector 203.0 105.0 4.0) (float-vector 233.0 105.0 4.0) (float-vector 233.0 105.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 120.0 12.0) (float-vector 203.0 120.0 4.0) (float-vector 203.0 105.0 4.0) (float-vector 203.0 105.0 12.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 233.0 -105.0 12.0) (float-vector 203.0 -105.0 12.0) (float-vector 203.0 -120.0 12.0) (float-vector 233.0 -120.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 -105.0 4.0) (float-vector 233.0 -105.0 4.0) (float-vector 233.0 -120.0 4.0) (float-vector 203.0 -120.0 4.0)))
         (instance face :init :vertices (list (float-vector 233.0 -105.0 12.0) (float-vector 233.0 -105.0 4.0) (float-vector 203.0 -105.0 4.0) (float-vector 203.0 -105.0 12.0)))
         (instance face :init :vertices (list (float-vector 233.0 -120.0 12.0) (float-vector 233.0 -120.0 4.0) (float-vector 233.0 -105.0 4.0) (float-vector 233.0 -105.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 -120.0 12.0) (float-vector 203.0 -120.0 4.0) (float-vector 233.0 -120.0 4.0) (float-vector 233.0 -120.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 -105.0 12.0) (float-vector 203.0 -105.0 4.0) (float-vector 203.0 -120.0 4.0) (float-vector 203.0 -120.0 12.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :burlywood1)
     (send (elt bc 2) :set-color :gray)
     (send (elt bc 3) :set-color :gray)
     (send (elt bc 4) :set-color :gray)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-hrp2-parts-drawer-bodyset3 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-hrp2-parts-drawer-bodyset4
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -195.0 372.5 -82.5) (float-vector -195.0 -372.5 -82.5) (float-vector -195.0 -372.5 82.5) (float-vector -195.0 372.5 82.5)))
         (instance face :init :vertices (list (float-vector 195.0 -372.5 -82.5) (float-vector 195.0 -372.5 82.5) (float-vector -195.0 -372.5 82.5) (float-vector -195.0 -372.5 -82.5)))
         (instance face :init :vertices (list (float-vector 195.0 372.5 -82.5) (float-vector 195.0 372.5 82.5) (float-vector 195.0 357.5 82.5) (float-vector 195.0 357.5 -67.5) (float-vector 195.0 -357.5 -67.5) (float-vector 195.0 -357.5 82.5) (float-vector 195.0 -372.5 82.5) (float-vector 195.0 -372.5 -82.5)))
         (instance face :init :vertices (list (float-vector -195.0 372.5 82.5) (float-vector -195.0 -372.5 82.5) (float-vector 195.0 -372.5 82.5) (float-vector 195.0 -357.5 82.5) (float-vector -180.0 -357.5 82.5) (float-vector -180.0 357.5 82.5) (float-vector 195.0 357.5 82.5) (float-vector 195.0 372.5 82.5)))
         (instance face :init :vertices (list (float-vector 195.0 372.5 -82.5) (float-vector 195.0 -372.5 -82.5) (float-vector -195.0 -372.5 -82.5) (float-vector -195.0 372.5 -82.5)))
         (instance face :init :vertices (list (float-vector -195.0 372.5 -82.5) (float-vector -195.0 372.5 82.5) (float-vector 195.0 372.5 82.5) (float-vector 195.0 372.5 -82.5)))
         (instance face :init :vertices (list (float-vector -180.0 357.5 82.5) (float-vector -180.0 -357.5 82.5) (float-vector -180.0 -357.5 -67.5) (float-vector -180.0 357.5 -67.5)))
         (instance face :init :vertices (list (float-vector -180.0 -357.5 -67.5) (float-vector -180.0 -357.5 82.5) (float-vector 195.0 -357.5 82.5) (float-vector 195.0 -357.5 -67.5)))
         (instance face :init :vertices (list (float-vector 195.0 357.5 -67.5) (float-vector 195.0 357.5 82.5) (float-vector -180.0 357.5 82.5) (float-vector -180.0 357.5 -67.5)))
         (instance face :init :vertices (list (float-vector -180.0 357.5 -67.5) (float-vector -180.0 -357.5 -67.5) (float-vector 195.0 -357.5 -67.5) (float-vector 195.0 357.5 -67.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 210.5 387.5 98.0) (float-vector 195.5 387.5 98.0) (float-vector 195.5 -387.5 98.0) (float-vector 210.5 -387.5 98.0)))
         (instance face :init :vertices (list (float-vector 195.5 387.5 -82.0) (float-vector 210.5 387.5 -82.0) (float-vector 210.5 -387.5 -82.0) (float-vector 195.5 -387.5 -82.0)))
         (instance face :init :vertices (list (float-vector 210.5 387.5 98.0) (float-vector 210.5 387.5 -82.0) (float-vector 195.5 387.5 -82.0) (float-vector 195.5 387.5 98.0)))
         (instance face :init :vertices (list (float-vector 210.5 -387.5 98.0) (float-vector 210.5 -387.5 -82.0) (float-vector 210.5 387.5 -82.0) (float-vector 210.5 387.5 98.0)))
         (instance face :init :vertices (list (float-vector 195.5 -387.5 98.0) (float-vector 195.5 -387.5 -82.0) (float-vector 210.5 -387.5 -82.0) (float-vector 210.5 -387.5 98.0)))
         (instance face :init :vertices (list (float-vector 195.5 387.5 98.0) (float-vector 195.5 387.5 -82.0) (float-vector 195.5 -387.5 -82.0) (float-vector 195.5 -387.5 98.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 237.33 -120.0 5.5) (float-vector 238.0 -120.0 8.0) (float-vector 237.33 -120.0 10.5) (float-vector 235.5 -120.0 12.3301) (float-vector 233.0 -120.0 13.0) (float-vector 230.5 -120.0 12.3301) (float-vector 228.67 -120.0 10.5) (float-vector 228.0 -120.0 8.0) (float-vector 228.67 -120.0 5.5) (float-vector 230.5 -120.0 3.66987) (float-vector 233.0 -120.0 3.0) (float-vector 235.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 238.0 120.0 8.0) (float-vector 237.33 120.0 5.5) (float-vector 235.5 120.0 3.66987) (float-vector 233.0 120.0 3.0) (float-vector 230.5 120.0 3.66987) (float-vector 228.67 120.0 5.5) (float-vector 228.0 120.0 8.0) (float-vector 228.67 120.0 10.5) (float-vector 230.5 120.0 12.3301) (float-vector 233.0 120.0 13.0) (float-vector 235.5 120.0 12.3301) (float-vector 237.33 120.0 10.5)))
         (instance face :init :vertices (list (float-vector 237.33 -120.0 5.5) (float-vector 237.33 120.0 5.5) (float-vector 238.0 120.0 8.0) (float-vector 238.0 -120.0 8.0)))
         (instance face :init :vertices (list (float-vector 235.5 -120.0 3.66987) (float-vector 235.5 120.0 3.66987) (float-vector 237.33 120.0 5.5) (float-vector 237.33 -120.0 5.5)))
         (instance face :init :vertices (list (float-vector 233.0 -120.0 3.0) (float-vector 233.0 120.0 3.0) (float-vector 235.5 120.0 3.66987) (float-vector 235.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 230.5 -120.0 3.66987) (float-vector 230.5 120.0 3.66987) (float-vector 233.0 120.0 3.0) (float-vector 233.0 -120.0 3.0)))
         (instance face :init :vertices (list (float-vector 228.67 -120.0 5.5) (float-vector 228.67 120.0 5.5) (float-vector 230.5 120.0 3.66987) (float-vector 230.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 228.0 -120.0 8.0) (float-vector 228.0 120.0 8.0) (float-vector 228.67 120.0 5.5) (float-vector 228.67 -120.0 5.5)))
         (instance face :init :vertices (list (float-vector 228.67 -120.0 10.5) (float-vector 228.67 120.0 10.5) (float-vector 228.0 120.0 8.0) (float-vector 228.0 -120.0 8.0)))
         (instance face :init :vertices (list (float-vector 230.5 -120.0 12.3301) (float-vector 230.5 120.0 12.3301) (float-vector 228.67 120.0 10.5) (float-vector 228.67 -120.0 10.5)))
         (instance face :init :vertices (list (float-vector 233.0 -120.0 13.0) (float-vector 233.0 120.0 13.0) (float-vector 230.5 120.0 12.3301) (float-vector 230.5 -120.0 12.3301)))
         (instance face :init :vertices (list (float-vector 235.5 -120.0 12.3301) (float-vector 235.5 120.0 12.3301) (float-vector 233.0 120.0 13.0) (float-vector 233.0 -120.0 13.0)))
         (instance face :init :vertices (list (float-vector 237.33 -120.0 10.5) (float-vector 237.33 120.0 10.5) (float-vector 235.5 120.0 12.3301) (float-vector 235.5 -120.0 12.3301)))
         (instance face :init :vertices (list (float-vector 238.0 -120.0 8.0) (float-vector 238.0 120.0 8.0) (float-vector 237.33 120.0 10.5) (float-vector 237.33 -120.0 10.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 233.0 120.0 12.0) (float-vector 203.0 120.0 12.0) (float-vector 203.0 105.0 12.0) (float-vector 233.0 105.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 120.0 4.0) (float-vector 233.0 120.0 4.0) (float-vector 233.0 105.0 4.0) (float-vector 203.0 105.0 4.0)))
         (instance face :init :vertices (list (float-vector 233.0 120.0 12.0) (float-vector 233.0 120.0 4.0) (float-vector 203.0 120.0 4.0) (float-vector 203.0 120.0 12.0)))
         (instance face :init :vertices (list (float-vector 233.0 105.0 12.0) (float-vector 233.0 105.0 4.0) (float-vector 233.0 120.0 4.0) (float-vector 233.0 120.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 105.0 12.0) (float-vector 203.0 105.0 4.0) (float-vector 233.0 105.0 4.0) (float-vector 233.0 105.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 120.0 12.0) (float-vector 203.0 120.0 4.0) (float-vector 203.0 105.0 4.0) (float-vector 203.0 105.0 12.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 233.0 -105.0 12.0) (float-vector 203.0 -105.0 12.0) (float-vector 203.0 -120.0 12.0) (float-vector 233.0 -120.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 -105.0 4.0) (float-vector 233.0 -105.0 4.0) (float-vector 233.0 -120.0 4.0) (float-vector 203.0 -120.0 4.0)))
         (instance face :init :vertices (list (float-vector 233.0 -105.0 12.0) (float-vector 233.0 -105.0 4.0) (float-vector 203.0 -105.0 4.0) (float-vector 203.0 -105.0 12.0)))
         (instance face :init :vertices (list (float-vector 233.0 -120.0 12.0) (float-vector 233.0 -120.0 4.0) (float-vector 233.0 -105.0 4.0) (float-vector 233.0 -105.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 -120.0 12.0) (float-vector 203.0 -120.0 4.0) (float-vector 233.0 -120.0 4.0) (float-vector 233.0 -120.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 -105.0 12.0) (float-vector 203.0 -105.0 4.0) (float-vector 203.0 -120.0 4.0) (float-vector 203.0 -120.0 12.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :burlywood1)
     (send (elt bc 2) :set-color :gray)
     (send (elt bc 3) :set-color :gray)
     (send (elt bc 4) :set-color :gray)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-hrp2-parts-drawer-bodyset4 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-hrp2-parts-drawer-bodyset5
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -195.0 372.5 -82.5) (float-vector -195.0 -372.5 -82.5) (float-vector -195.0 -372.5 82.5) (float-vector -195.0 372.5 82.5)))
         (instance face :init :vertices (list (float-vector 195.0 -372.5 -82.5) (float-vector 195.0 -372.5 82.5) (float-vector -195.0 -372.5 82.5) (float-vector -195.0 -372.5 -82.5)))
         (instance face :init :vertices (list (float-vector 195.0 372.5 -82.5) (float-vector 195.0 372.5 82.5) (float-vector 195.0 357.5 82.5) (float-vector 195.0 357.5 -67.5) (float-vector 195.0 -357.5 -67.5) (float-vector 195.0 -357.5 82.5) (float-vector 195.0 -372.5 82.5) (float-vector 195.0 -372.5 -82.5)))
         (instance face :init :vertices (list (float-vector -195.0 372.5 82.5) (float-vector -195.0 -372.5 82.5) (float-vector 195.0 -372.5 82.5) (float-vector 195.0 -357.5 82.5) (float-vector -180.0 -357.5 82.5) (float-vector -180.0 357.5 82.5) (float-vector 195.0 357.5 82.5) (float-vector 195.0 372.5 82.5)))
         (instance face :init :vertices (list (float-vector 195.0 372.5 -82.5) (float-vector 195.0 -372.5 -82.5) (float-vector -195.0 -372.5 -82.5) (float-vector -195.0 372.5 -82.5)))
         (instance face :init :vertices (list (float-vector -195.0 372.5 -82.5) (float-vector -195.0 372.5 82.5) (float-vector 195.0 372.5 82.5) (float-vector 195.0 372.5 -82.5)))
         (instance face :init :vertices (list (float-vector -180.0 357.5 82.5) (float-vector -180.0 -357.5 82.5) (float-vector -180.0 -357.5 -67.5) (float-vector -180.0 357.5 -67.5)))
         (instance face :init :vertices (list (float-vector -180.0 -357.5 -67.5) (float-vector -180.0 -357.5 82.5) (float-vector 195.0 -357.5 82.5) (float-vector 195.0 -357.5 -67.5)))
         (instance face :init :vertices (list (float-vector 195.0 357.5 -67.5) (float-vector 195.0 357.5 82.5) (float-vector -180.0 357.5 82.5) (float-vector -180.0 357.5 -67.5)))
         (instance face :init :vertices (list (float-vector -180.0 357.5 -67.5) (float-vector -180.0 -357.5 -67.5) (float-vector 195.0 -357.5 -67.5) (float-vector 195.0 357.5 -67.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 210.5 387.5 98.0) (float-vector 195.5 387.5 98.0) (float-vector 195.5 -387.5 98.0) (float-vector 210.5 -387.5 98.0)))
         (instance face :init :vertices (list (float-vector 195.5 387.5 -82.0) (float-vector 210.5 387.5 -82.0) (float-vector 210.5 -387.5 -82.0) (float-vector 195.5 -387.5 -82.0)))
         (instance face :init :vertices (list (float-vector 210.5 387.5 98.0) (float-vector 210.5 387.5 -82.0) (float-vector 195.5 387.5 -82.0) (float-vector 195.5 387.5 98.0)))
         (instance face :init :vertices (list (float-vector 210.5 -387.5 98.0) (float-vector 210.5 -387.5 -82.0) (float-vector 210.5 387.5 -82.0) (float-vector 210.5 387.5 98.0)))
         (instance face :init :vertices (list (float-vector 195.5 -387.5 98.0) (float-vector 195.5 -387.5 -82.0) (float-vector 210.5 -387.5 -82.0) (float-vector 210.5 -387.5 98.0)))
         (instance face :init :vertices (list (float-vector 195.5 387.5 98.0) (float-vector 195.5 387.5 -82.0) (float-vector 195.5 -387.5 -82.0) (float-vector 195.5 -387.5 98.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 237.33 -120.0 5.5) (float-vector 238.0 -120.0 8.0) (float-vector 237.33 -120.0 10.5) (float-vector 235.5 -120.0 12.3301) (float-vector 233.0 -120.0 13.0) (float-vector 230.5 -120.0 12.3301) (float-vector 228.67 -120.0 10.5) (float-vector 228.0 -120.0 8.0) (float-vector 228.67 -120.0 5.5) (float-vector 230.5 -120.0 3.66987) (float-vector 233.0 -120.0 3.0) (float-vector 235.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 238.0 120.0 8.0) (float-vector 237.33 120.0 5.5) (float-vector 235.5 120.0 3.66987) (float-vector 233.0 120.0 3.0) (float-vector 230.5 120.0 3.66987) (float-vector 228.67 120.0 5.5) (float-vector 228.0 120.0 8.0) (float-vector 228.67 120.0 10.5) (float-vector 230.5 120.0 12.3301) (float-vector 233.0 120.0 13.0) (float-vector 235.5 120.0 12.3301) (float-vector 237.33 120.0 10.5)))
         (instance face :init :vertices (list (float-vector 237.33 -120.0 5.5) (float-vector 237.33 120.0 5.5) (float-vector 238.0 120.0 8.0) (float-vector 238.0 -120.0 8.0)))
         (instance face :init :vertices (list (float-vector 235.5 -120.0 3.66987) (float-vector 235.5 120.0 3.66987) (float-vector 237.33 120.0 5.5) (float-vector 237.33 -120.0 5.5)))
         (instance face :init :vertices (list (float-vector 233.0 -120.0 3.0) (float-vector 233.0 120.0 3.0) (float-vector 235.5 120.0 3.66987) (float-vector 235.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 230.5 -120.0 3.66987) (float-vector 230.5 120.0 3.66987) (float-vector 233.0 120.0 3.0) (float-vector 233.0 -120.0 3.0)))
         (instance face :init :vertices (list (float-vector 228.67 -120.0 5.5) (float-vector 228.67 120.0 5.5) (float-vector 230.5 120.0 3.66987) (float-vector 230.5 -120.0 3.66987)))
         (instance face :init :vertices (list (float-vector 228.0 -120.0 8.0) (float-vector 228.0 120.0 8.0) (float-vector 228.67 120.0 5.5) (float-vector 228.67 -120.0 5.5)))
         (instance face :init :vertices (list (float-vector 228.67 -120.0 10.5) (float-vector 228.67 120.0 10.5) (float-vector 228.0 120.0 8.0) (float-vector 228.0 -120.0 8.0)))
         (instance face :init :vertices (list (float-vector 230.5 -120.0 12.3301) (float-vector 230.5 120.0 12.3301) (float-vector 228.67 120.0 10.5) (float-vector 228.67 -120.0 10.5)))
         (instance face :init :vertices (list (float-vector 233.0 -120.0 13.0) (float-vector 233.0 120.0 13.0) (float-vector 230.5 120.0 12.3301) (float-vector 230.5 -120.0 12.3301)))
         (instance face :init :vertices (list (float-vector 235.5 -120.0 12.3301) (float-vector 235.5 120.0 12.3301) (float-vector 233.0 120.0 13.0) (float-vector 233.0 -120.0 13.0)))
         (instance face :init :vertices (list (float-vector 237.33 -120.0 10.5) (float-vector 237.33 120.0 10.5) (float-vector 235.5 120.0 12.3301) (float-vector 235.5 -120.0 12.3301)))
         (instance face :init :vertices (list (float-vector 238.0 -120.0 8.0) (float-vector 238.0 120.0 8.0) (float-vector 237.33 120.0 10.5) (float-vector 237.33 -120.0 10.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 233.0 120.0 12.0) (float-vector 203.0 120.0 12.0) (float-vector 203.0 105.0 12.0) (float-vector 233.0 105.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 120.0 4.0) (float-vector 233.0 120.0 4.0) (float-vector 233.0 105.0 4.0) (float-vector 203.0 105.0 4.0)))
         (instance face :init :vertices (list (float-vector 233.0 120.0 12.0) (float-vector 233.0 120.0 4.0) (float-vector 203.0 120.0 4.0) (float-vector 203.0 120.0 12.0)))
         (instance face :init :vertices (list (float-vector 233.0 105.0 12.0) (float-vector 233.0 105.0 4.0) (float-vector 233.0 120.0 4.0) (float-vector 233.0 120.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 105.0 12.0) (float-vector 203.0 105.0 4.0) (float-vector 233.0 105.0 4.0) (float-vector 233.0 105.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 120.0 12.0) (float-vector 203.0 120.0 4.0) (float-vector 203.0 105.0 4.0) (float-vector 203.0 105.0 12.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 233.0 -105.0 12.0) (float-vector 203.0 -105.0 12.0) (float-vector 203.0 -120.0 12.0) (float-vector 233.0 -120.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 -105.0 4.0) (float-vector 233.0 -105.0 4.0) (float-vector 233.0 -120.0 4.0) (float-vector 203.0 -120.0 4.0)))
         (instance face :init :vertices (list (float-vector 233.0 -105.0 12.0) (float-vector 233.0 -105.0 4.0) (float-vector 203.0 -105.0 4.0) (float-vector 203.0 -105.0 12.0)))
         (instance face :init :vertices (list (float-vector 233.0 -120.0 12.0) (float-vector 233.0 -120.0 4.0) (float-vector 233.0 -105.0 4.0) (float-vector 233.0 -105.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 -120.0 12.0) (float-vector 203.0 -120.0 4.0) (float-vector 233.0 -120.0 4.0) (float-vector 233.0 -120.0 12.0)))
         (instance face :init :vertices (list (float-vector 203.0 -105.0 12.0) (float-vector 203.0 -105.0 4.0) (float-vector 203.0 -120.0 4.0) (float-vector 203.0 -120.0 12.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :burlywood1)
     (send (elt bc 2) :set-color :gray)
     (send (elt bc 3) :set-color :gray)
     (send (elt bc 4) :set-color :gray)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-hrp2-parts-drawer-bodyset5 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-hrp2-parts-drawer-bodyset6
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -195.0 372.5 -177.5) (float-vector -195.0 -372.5 -177.5) (float-vector -195.0 -372.5 177.5) (float-vector -195.0 372.5 177.5)))
         (instance face :init :vertices (list (float-vector 195.0 -372.5 -177.5) (float-vector 195.0 -372.5 177.5) (float-vector -195.0 -372.5 177.5) (float-vector -195.0 -372.5 -177.5)))
         (instance face :init :vertices (list (float-vector 195.0 372.5 -177.5) (float-vector 195.0 372.5 177.5) (float-vector 195.0 357.5 177.5) (float-vector 195.0 357.5 -162.5) (float-vector 195.0 -357.5 -162.5) (float-vector 195.0 -357.5 177.5) (float-vector 195.0 -372.5 177.5) (float-vector 195.0 -372.5 -177.5)))
         (instance face :init :vertices (list (float-vector -195.0 372.5 177.5) (float-vector -195.0 -372.5 177.5) (float-vector 195.0 -372.5 177.5) (float-vector 195.0 -357.5 177.5) (float-vector -180.0 -357.5 177.5) (float-vector -180.0 357.5 177.5) (float-vector 195.0 357.5 177.5) (float-vector 195.0 372.5 177.5)))
         (instance face :init :vertices (list (float-vector 195.0 372.5 -177.5) (float-vector 195.0 -372.5 -177.5) (float-vector -195.0 -372.5 -177.5) (float-vector -195.0 372.5 -177.5)))
         (instance face :init :vertices (list (float-vector -195.0 372.5 -177.5) (float-vector -195.0 372.5 177.5) (float-vector 195.0 372.5 177.5) (float-vector 195.0 372.5 -177.5)))
         (instance face :init :vertices (list (float-vector -180.0 357.5 177.5) (float-vector -180.0 -357.5 177.5) (float-vector -180.0 -357.5 -162.5) (float-vector -180.0 357.5 -162.5)))
         (instance face :init :vertices (list (float-vector -180.0 -357.5 -162.5) (float-vector -180.0 -357.5 177.5) (float-vector 195.0 -357.5 177.5) (float-vector 195.0 -357.5 -162.5)))
         (instance face :init :vertices (list (float-vector 195.0 357.5 -162.5) (float-vector 195.0 357.5 177.5) (float-vector -180.0 357.5 177.5) (float-vector -180.0 357.5 -162.5)))
         (instance face :init :vertices (list (float-vector -180.0 357.5 -162.5) (float-vector -180.0 -357.5 -162.5) (float-vector 195.0 -357.5 -162.5) (float-vector 195.0 357.5 -162.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 210.5 387.5 193.0) (float-vector 195.5 387.5 193.0) (float-vector 195.5 -387.5 193.0) (float-vector 210.5 -387.5 193.0)))
         (instance face :init :vertices (list (float-vector 195.5 387.5 -177.0) (float-vector 210.5 387.5 -177.0) (float-vector 210.5 -387.5 -177.0) (float-vector 195.5 -387.5 -177.0)))
         (instance face :init :vertices (list (float-vector 210.5 387.5 193.0) (float-vector 210.5 387.5 -177.0) (float-vector 195.5 387.5 -177.0) (float-vector 195.5 387.5 193.0)))
         (instance face :init :vertices (list (float-vector 210.5 -387.5 193.0) (float-vector 210.5 -387.5 -177.0) (float-vector 210.5 387.5 -177.0) (float-vector 210.5 387.5 193.0)))
         (instance face :init :vertices (list (float-vector 195.5 -387.5 193.0) (float-vector 195.5 -387.5 -177.0) (float-vector 210.5 -387.5 -177.0) (float-vector 210.5 -387.5 193.0)))
         (instance face :init :vertices (list (float-vector 195.5 387.5 193.0) (float-vector 195.5 387.5 -177.0) (float-vector 195.5 -387.5 -177.0) (float-vector 195.5 -387.5 193.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 237.33 -120.0 130.5) (float-vector 238.0 -120.0 133.0) (float-vector 237.33 -120.0 135.5) (float-vector 235.5 -120.0 137.33) (float-vector 233.0 -120.0 138.0) (float-vector 230.5 -120.0 137.33) (float-vector 228.67 -120.0 135.5) (float-vector 228.0 -120.0 133.0) (float-vector 228.67 -120.0 130.5) (float-vector 230.5 -120.0 128.67) (float-vector 233.0 -120.0 128.0) (float-vector 235.5 -120.0 128.67)))
         (instance face :init :vertices (list (float-vector 238.0 120.0 133.0) (float-vector 237.33 120.0 130.5) (float-vector 235.5 120.0 128.67) (float-vector 233.0 120.0 128.0) (float-vector 230.5 120.0 128.67) (float-vector 228.67 120.0 130.5) (float-vector 228.0 120.0 133.0) (float-vector 228.67 120.0 135.5) (float-vector 230.5 120.0 137.33) (float-vector 233.0 120.0 138.0) (float-vector 235.5 120.0 137.33) (float-vector 237.33 120.0 135.5)))
         (instance face :init :vertices (list (float-vector 237.33 -120.0 130.5) (float-vector 237.33 120.0 130.5) (float-vector 238.0 120.0 133.0) (float-vector 238.0 -120.0 133.0)))
         (instance face :init :vertices (list (float-vector 235.5 -120.0 128.67) (float-vector 235.5 120.0 128.67) (float-vector 237.33 120.0 130.5) (float-vector 237.33 -120.0 130.5)))
         (instance face :init :vertices (list (float-vector 233.0 -120.0 128.0) (float-vector 233.0 120.0 128.0) (float-vector 235.5 120.0 128.67) (float-vector 235.5 -120.0 128.67)))
         (instance face :init :vertices (list (float-vector 230.5 -120.0 128.67) (float-vector 230.5 120.0 128.67) (float-vector 233.0 120.0 128.0) (float-vector 233.0 -120.0 128.0)))
         (instance face :init :vertices (list (float-vector 228.67 -120.0 130.5) (float-vector 228.67 120.0 130.5) (float-vector 230.5 120.0 128.67) (float-vector 230.5 -120.0 128.67)))
         (instance face :init :vertices (list (float-vector 228.0 -120.0 133.0) (float-vector 228.0 120.0 133.0) (float-vector 228.67 120.0 130.5) (float-vector 228.67 -120.0 130.5)))
         (instance face :init :vertices (list (float-vector 228.67 -120.0 135.5) (float-vector 228.67 120.0 135.5) (float-vector 228.0 120.0 133.0) (float-vector 228.0 -120.0 133.0)))
         (instance face :init :vertices (list (float-vector 230.5 -120.0 137.33) (float-vector 230.5 120.0 137.33) (float-vector 228.67 120.0 135.5) (float-vector 228.67 -120.0 135.5)))
         (instance face :init :vertices (list (float-vector 233.0 -120.0 138.0) (float-vector 233.0 120.0 138.0) (float-vector 230.5 120.0 137.33) (float-vector 230.5 -120.0 137.33)))
         (instance face :init :vertices (list (float-vector 235.5 -120.0 137.33) (float-vector 235.5 120.0 137.33) (float-vector 233.0 120.0 138.0) (float-vector 233.0 -120.0 138.0)))
         (instance face :init :vertices (list (float-vector 237.33 -120.0 135.5) (float-vector 237.33 120.0 135.5) (float-vector 235.5 120.0 137.33) (float-vector 235.5 -120.0 137.33)))
         (instance face :init :vertices (list (float-vector 238.0 -120.0 133.0) (float-vector 238.0 120.0 133.0) (float-vector 237.33 120.0 135.5) (float-vector 237.33 -120.0 135.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 233.0 120.0 137.0) (float-vector 203.0 120.0 137.0) (float-vector 203.0 105.0 137.0) (float-vector 233.0 105.0 137.0)))
         (instance face :init :vertices (list (float-vector 203.0 120.0 129.0) (float-vector 233.0 120.0 129.0) (float-vector 233.0 105.0 129.0) (float-vector 203.0 105.0 129.0)))
         (instance face :init :vertices (list (float-vector 233.0 120.0 137.0) (float-vector 233.0 120.0 129.0) (float-vector 203.0 120.0 129.0) (float-vector 203.0 120.0 137.0)))
         (instance face :init :vertices (list (float-vector 233.0 105.0 137.0) (float-vector 233.0 105.0 129.0) (float-vector 233.0 120.0 129.0) (float-vector 233.0 120.0 137.0)))
         (instance face :init :vertices (list (float-vector 203.0 105.0 137.0) (float-vector 203.0 105.0 129.0) (float-vector 233.0 105.0 129.0) (float-vector 233.0 105.0 137.0)))
         (instance face :init :vertices (list (float-vector 203.0 120.0 137.0) (float-vector 203.0 120.0 129.0) (float-vector 203.0 105.0 129.0) (float-vector 203.0 105.0 137.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 233.0 -105.0 137.0) (float-vector 203.0 -105.0 137.0) (float-vector 203.0 -120.0 137.0) (float-vector 233.0 -120.0 137.0)))
         (instance face :init :vertices (list (float-vector 203.0 -105.0 129.0) (float-vector 233.0 -105.0 129.0) (float-vector 233.0 -120.0 129.0) (float-vector 203.0 -120.0 129.0)))
         (instance face :init :vertices (list (float-vector 233.0 -105.0 137.0) (float-vector 233.0 -105.0 129.0) (float-vector 203.0 -105.0 129.0) (float-vector 203.0 -105.0 137.0)))
         (instance face :init :vertices (list (float-vector 233.0 -120.0 137.0) (float-vector 233.0 -120.0 129.0) (float-vector 233.0 -105.0 129.0) (float-vector 233.0 -105.0 137.0)))
         (instance face :init :vertices (list (float-vector 203.0 -120.0 137.0) (float-vector 203.0 -120.0 129.0) (float-vector 233.0 -120.0 129.0) (float-vector 233.0 -120.0 137.0)))
         (instance face :init :vertices (list (float-vector 203.0 -105.0 137.0) (float-vector 203.0 -105.0 129.0) (float-vector 203.0 -120.0 129.0) (float-vector 203.0 -120.0 137.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :burlywood1)
     (send (elt bc 2) :set-color :gray)
     (send (elt bc 3) :set-color :gray)
     (send (elt bc 4) :set-color :gray)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-hrp2-parts-drawer-bodyset6 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send blink1 :newcoords (make-coords :pos (float-vector 0.0 0.0 207.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink1)
     (send blink2 :newcoords (make-coords :pos (float-vector 0.0 0.0 484.5) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink2)
     (send blink3 :newcoords (make-coords :pos (float-vector 0.0 0.0 667.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink3)
     (send blink4 :newcoords (make-coords :pos (float-vector 0.0 0.0 849.5) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink4)
     (send blink5 :newcoords (make-coords :pos (float-vector 0.0 0.0 1032.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink5)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     ;; definition of :drawer0
     (setq joint0 (instance linear-joint :init
			     :parent-link blink0 :child-link blink1 :name :drawer0   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  420.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer1
     (setq joint1 (instance linear-joint :init
			     :parent-link blink0 :child-link blink2 :name :drawer1   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  420.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer2
     (setq joint2 (instance linear-joint :init
			     :parent-link blink0 :child-link blink3 :name :drawer2   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  420.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer3
     (setq joint3 (instance linear-joint :init
			     :parent-link blink0 :child-link blink4 :name :drawer3   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  420.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer4
     (setq joint4 (instance linear-joint :init
			     :parent-link blink0 :child-link blink5 :name :drawer4   :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  420.0 :max-joint-velocity 0.785398 :max-joint-torque 100))


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 0.0 0.0 0.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) :name "handle0"))
     (send blink0 :assoc handle0)
     (setq handle1 (make-cascoords :pos (float-vector 233.0 -6.821210e-13 340.0) :rot #2f((-1.0 -1.224647e-16 0.0) (2.465190e-32 -2.220446e-16 -1.0) (1.224647e-16 -1.0 2.220446e-16)) :name ":drawer-handle0"))
     (send blink1 :assoc handle1)
     (setq handle2 (make-cascoords :pos (float-vector 233.0 -9.094947e-13 492.5) :rot #2f((-1.0 -1.224647e-16 0.0) (2.465190e-32 -2.220446e-16 -1.0) (1.224647e-16 -1.0 2.220446e-16)) :name ":drawer-handle1"))
     (send blink2 :assoc handle2)
     (setq handle3 (make-cascoords :pos (float-vector 233.0 0.0 675.0) :rot #2f((-1.0 -1.224647e-16 0.0) (2.465190e-32 -2.220446e-16 -1.0) (1.224647e-16 -1.0 2.220446e-16)) :name ":drawer-handle2"))
     (send blink3 :assoc handle3)
     (setq handle4 (make-cascoords :pos (float-vector 233.0 0.0 857.5) :rot #2f((-1.0 -1.224647e-16 0.0) (2.465190e-32 -2.220446e-16 -1.0) (1.224647e-16 -1.0 2.220446e-16)) :name ":drawer-handle3"))
     (send blink4 :assoc handle4)
     (setq handle5 (make-cascoords :pos (float-vector 233.0 0.0 1040.0) :rot #2f((-1.0 -1.224647e-16 0.0) (2.465190e-32 -2.220446e-16 -1.0) (1.224647e-16 -1.0 2.220446e-16)) :name ":drawer-handle4"))
     (send blink5 :assoc handle5)

     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:drawer0 (&rest args) (forward-message-to joint0 args))
  (:drawer1 (&rest args) (forward-message-to joint1 args))
  (:drawer2 (&rest args) (forward-message-to joint2 args))
  (:drawer3 (&rest args) (forward-message-to joint3 args))
  (:drawer4 (&rest args) (forward-message-to joint4 args))
  (:handle (&rest args) (forward-message-to-all (list  handle0 handle1 handle2 handle3 handle4 handle5) args))
  (:handle-handle0 (&rest args) (forward-message-to handle0 args))
  (:handle-drawer-handle0 (&rest args) (forward-message-to handle1 args))
  (:handle-drawer-handle1 (&rest args) (forward-message-to handle2 args))
  (:handle-drawer-handle2 (&rest args) (forward-message-to handle3 args))
  (:handle-drawer-handle3 (&rest args) (forward-message-to handle4 args))
  (:handle-drawer-handle4 (&rest args) (forward-message-to handle5 args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun room73b2-hrp2-parts-drawer (&rest args) (instance* room73b2-hrp2-parts-drawer-object :init args))
;; (format *error-output* "(instance room73b2-hrp2-parts-drawer-object :init) for generating model~%")
