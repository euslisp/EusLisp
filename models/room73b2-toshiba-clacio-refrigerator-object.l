;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass room73b2-toshiba-clacio-refrigerator-object
  :super cascaded-link
  :slots (sensors
         handle0 handle1 handle2 handle3 handle4
         joint0 joint1 joint2 joint3 joint4 ))
(defmethod room73b2-toshiba-clacio-refrigerator-object
  (:init
   (&rest args &key (name "room73b2-toshiba-clacio-refrigerator") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1 blink2 blink3 blink4 blink5
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :root
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 250.0 325.0 1750.0) (float-vector -300.0 325.0 1750.0) (float-vector -300.0 -325.0 1750.0) (float-vector 250.0 -325.0 1750.0)))
         (instance face :init :vertices (list (float-vector -300.0 325.0 1730.0) (float-vector 250.0 325.0 1730.0) (float-vector 250.0 -325.0 1730.0) (float-vector -300.0 -325.0 1730.0)))
         (instance face :init :vertices (list (float-vector 250.0 325.0 1750.0) (float-vector 250.0 325.0 1730.0) (float-vector -300.0 325.0 1730.0) (float-vector -300.0 325.0 1750.0)))
         (instance face :init :vertices (list (float-vector 250.0 -325.0 1750.0) (float-vector 250.0 -325.0 1730.0) (float-vector 250.0 325.0 1730.0) (float-vector 250.0 325.0 1750.0)))
         (instance face :init :vertices (list (float-vector -300.0 -325.0 1750.0) (float-vector -300.0 -325.0 1730.0) (float-vector 250.0 -325.0 1730.0) (float-vector 250.0 -325.0 1750.0)))
         (instance face :init :vertices (list (float-vector -300.0 325.0 1750.0) (float-vector -300.0 325.0 1730.0) (float-vector -300.0 -325.0 1730.0) (float-vector -300.0 -325.0 1750.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 310.0 325.0 50.0) (float-vector -300.0 325.0 50.0) (float-vector -300.0 -325.0 50.0) (float-vector 310.0 -325.0 50.0)))
         (instance face :init :vertices (list (float-vector -300.0 325.0 0.0) (float-vector 310.0 325.0 0.0) (float-vector 310.0 -325.0 0.0) (float-vector -300.0 -325.0 0.0)))
         (instance face :init :vertices (list (float-vector 310.0 325.0 50.0) (float-vector 310.0 325.0 0.0) (float-vector -300.0 325.0 0.0) (float-vector -300.0 325.0 50.0)))
         (instance face :init :vertices (list (float-vector 310.0 -325.0 50.0) (float-vector 310.0 -325.0 0.0) (float-vector 310.0 325.0 0.0) (float-vector 310.0 325.0 50.0)))
         (instance face :init :vertices (list (float-vector -300.0 -325.0 50.0) (float-vector -300.0 -325.0 0.0) (float-vector 310.0 -325.0 0.0) (float-vector 310.0 -325.0 50.0)))
         (instance face :init :vertices (list (float-vector -300.0 325.0 50.0) (float-vector -300.0 325.0 0.0) (float-vector -300.0 -325.0 0.0) (float-vector -300.0 -325.0 50.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -280.0 305.0 1730.0) (float-vector -300.0 305.0 1730.0) (float-vector -300.0 -305.0 1730.0) (float-vector -280.0 -305.0 1730.0)))
         (instance face :init :vertices (list (float-vector -300.0 305.0 50.0) (float-vector -280.0 305.0 50.0) (float-vector -280.0 -305.0 50.0) (float-vector -300.0 -305.0 50.0)))
         (instance face :init :vertices (list (float-vector -280.0 305.0 1730.0) (float-vector -280.0 305.0 50.0) (float-vector -300.0 305.0 50.0) (float-vector -300.0 305.0 1730.0)))
         (instance face :init :vertices (list (float-vector -280.0 -305.0 1730.0) (float-vector -280.0 -305.0 50.0) (float-vector -280.0 305.0 50.0) (float-vector -280.0 305.0 1730.0)))
         (instance face :init :vertices (list (float-vector -300.0 -305.0 1730.0) (float-vector -300.0 -305.0 50.0) (float-vector -280.0 -305.0 50.0) (float-vector -280.0 -305.0 1730.0)))
         (instance face :init :vertices (list (float-vector -300.0 305.0 1730.0) (float-vector -300.0 305.0 50.0) (float-vector -300.0 -305.0 50.0) (float-vector -300.0 -305.0 1730.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 250.0 325.0 1730.0) (float-vector -300.0 325.0 1730.0) (float-vector -300.0 305.0 1730.0) (float-vector 250.0 305.0 1730.0)))
         (instance face :init :vertices (list (float-vector -300.0 325.0 50.0) (float-vector 250.0 325.0 50.0) (float-vector 250.0 305.0 50.0) (float-vector -300.0 305.0 50.0)))
         (instance face :init :vertices (list (float-vector 250.0 325.0 1730.0) (float-vector 250.0 325.0 50.0) (float-vector -300.0 325.0 50.0) (float-vector -300.0 325.0 1730.0)))
         (instance face :init :vertices (list (float-vector 250.0 305.0 1730.0) (float-vector 250.0 305.0 50.0) (float-vector 250.0 325.0 50.0) (float-vector 250.0 325.0 1730.0)))
         (instance face :init :vertices (list (float-vector -300.0 305.0 1730.0) (float-vector -300.0 305.0 50.0) (float-vector 250.0 305.0 50.0) (float-vector 250.0 305.0 1730.0)))
         (instance face :init :vertices (list (float-vector -300.0 325.0 1730.0) (float-vector -300.0 325.0 50.0) (float-vector -300.0 305.0 50.0) (float-vector -300.0 305.0 1730.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 250.0 -305.0 1730.0) (float-vector -300.0 -305.0 1730.0) (float-vector -300.0 -325.0 1730.0) (float-vector 250.0 -325.0 1730.0)))
         (instance face :init :vertices (list (float-vector -300.0 -305.0 50.0) (float-vector 250.0 -305.0 50.0) (float-vector 250.0 -325.0 50.0) (float-vector -300.0 -325.0 50.0)))
         (instance face :init :vertices (list (float-vector 250.0 -305.0 1730.0) (float-vector 250.0 -305.0 50.0) (float-vector -300.0 -305.0 50.0) (float-vector -300.0 -305.0 1730.0)))
         (instance face :init :vertices (list (float-vector 250.0 -325.0 1730.0) (float-vector 250.0 -325.0 50.0) (float-vector 250.0 -305.0 50.0) (float-vector 250.0 -305.0 1730.0)))
         (instance face :init :vertices (list (float-vector -300.0 -325.0 1730.0) (float-vector -300.0 -325.0 50.0) (float-vector 250.0 -325.0 50.0) (float-vector 250.0 -325.0 1730.0)))
         (instance face :init :vertices (list (float-vector -300.0 -305.0 1730.0) (float-vector -300.0 -305.0 50.0) (float-vector -300.0 -325.0 50.0) (float-vector -300.0 -325.0 1730.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 250.0 305.0 430.0) (float-vector -280.0 305.0 430.0) (float-vector -280.0 -305.0 430.0) (float-vector 250.0 -305.0 430.0)))
         (instance face :init :vertices (list (float-vector -280.0 305.0 410.0) (float-vector 250.0 305.0 410.0) (float-vector 250.0 -305.0 410.0) (float-vector -280.0 -305.0 410.0)))
         (instance face :init :vertices (list (float-vector 250.0 305.0 430.0) (float-vector 250.0 305.0 410.0) (float-vector -280.0 305.0 410.0) (float-vector -280.0 305.0 430.0)))
         (instance face :init :vertices (list (float-vector 250.0 -305.0 430.0) (float-vector 250.0 -305.0 410.0) (float-vector 250.0 305.0 410.0) (float-vector 250.0 305.0 430.0)))
         (instance face :init :vertices (list (float-vector -280.0 -305.0 430.0) (float-vector -280.0 -305.0 410.0) (float-vector 250.0 -305.0 410.0) (float-vector 250.0 -305.0 430.0)))
         (instance face :init :vertices (list (float-vector -280.0 305.0 430.0) (float-vector -280.0 305.0 410.0) (float-vector -280.0 -305.0 410.0) (float-vector -280.0 -305.0 430.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 250.0 305.0 770.0) (float-vector -280.0 305.0 770.0) (float-vector -280.0 -305.0 770.0) (float-vector 250.0 -305.0 770.0)))
         (instance face :init :vertices (list (float-vector -280.0 305.0 750.0) (float-vector 250.0 305.0 750.0) (float-vector 250.0 -305.0 750.0) (float-vector -280.0 -305.0 750.0)))
         (instance face :init :vertices (list (float-vector 250.0 305.0 770.0) (float-vector 250.0 305.0 750.0) (float-vector -280.0 305.0 750.0) (float-vector -280.0 305.0 770.0)))
         (instance face :init :vertices (list (float-vector 250.0 -305.0 770.0) (float-vector 250.0 -305.0 750.0) (float-vector 250.0 305.0 750.0) (float-vector 250.0 305.0 770.0)))
         (instance face :init :vertices (list (float-vector -280.0 -305.0 770.0) (float-vector -280.0 -305.0 750.0) (float-vector 250.0 -305.0 750.0) (float-vector 250.0 -305.0 770.0)))
         (instance face :init :vertices (list (float-vector -280.0 305.0 770.0) (float-vector -280.0 305.0 750.0) (float-vector -280.0 -305.0 750.0) (float-vector -280.0 -305.0 770.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 250.0 305.0 980.0) (float-vector -280.0 305.0 980.0) (float-vector -280.0 -305.0 980.0) (float-vector 250.0 -305.0 980.0)))
         (instance face :init :vertices (list (float-vector -280.0 305.0 960.0) (float-vector 250.0 305.0 960.0) (float-vector 250.0 -305.0 960.0) (float-vector -280.0 -305.0 960.0)))
         (instance face :init :vertices (list (float-vector 250.0 305.0 980.0) (float-vector 250.0 305.0 960.0) (float-vector -280.0 305.0 960.0) (float-vector -280.0 305.0 980.0)))
         (instance face :init :vertices (list (float-vector 250.0 -305.0 980.0) (float-vector 250.0 -305.0 960.0) (float-vector 250.0 305.0 960.0) (float-vector 250.0 305.0 980.0)))
         (instance face :init :vertices (list (float-vector -280.0 -305.0 980.0) (float-vector -280.0 -305.0 960.0) (float-vector 250.0 -305.0 960.0) (float-vector 250.0 -305.0 980.0)))
         (instance face :init :vertices (list (float-vector -280.0 305.0 980.0) (float-vector -280.0 305.0 960.0) (float-vector -280.0 -305.0 960.0) (float-vector -280.0 -305.0 980.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :darkseagreen2)
     (send (elt bc 1) :set-color :darkseagreen2)
     (send (elt bc 2) :set-color :darkseagreen2)
     (send (elt bc 3) :set-color :darkseagreen2)
     (send (elt bc 4) :set-color :darkseagreen2)
     (send (elt bc 5) :set-color :darkseagreen2)
     (send (elt bc 6) :set-color :darkseagreen2)
     (send (elt bc 7) :set-color :darkseagreen2)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :root :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-toshiba-clacio-refrigerator-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -265.0 305.0 -167.5) (float-vector -265.0 -305.0 -167.5) (float-vector -265.0 -305.0 167.5) (float-vector -265.0 305.0 167.5)))
         (instance face :init :vertices (list (float-vector 265.0 -305.0 -167.5) (float-vector 265.0 -305.0 167.5) (float-vector -265.0 -305.0 167.5) (float-vector -265.0 -305.0 -167.5)))
         (instance face :init :vertices (list (float-vector 265.0 305.0 -167.5) (float-vector 265.0 305.0 167.5) (float-vector 265.0 285.0 167.5) (float-vector 265.0 285.0 -147.5) (float-vector 265.0 -285.0 -147.5) (float-vector 265.0 -285.0 167.5) (float-vector 265.0 -305.0 167.5) (float-vector 265.0 -305.0 -167.5)))
         (instance face :init :vertices (list (float-vector -265.0 305.0 167.5) (float-vector -265.0 -305.0 167.5) (float-vector 265.0 -305.0 167.5) (float-vector 265.0 -285.0 167.5) (float-vector -245.0 -285.0 167.5) (float-vector -245.0 285.0 167.5) (float-vector 265.0 285.0 167.5) (float-vector 265.0 305.0 167.5)))
         (instance face :init :vertices (list (float-vector 265.0 305.0 -167.5) (float-vector 265.0 -305.0 -167.5) (float-vector -265.0 -305.0 -167.5) (float-vector -265.0 305.0 -167.5)))
         (instance face :init :vertices (list (float-vector -265.0 305.0 -167.5) (float-vector -265.0 305.0 167.5) (float-vector 265.0 305.0 167.5) (float-vector 265.0 305.0 -167.5)))
         (instance face :init :vertices (list (float-vector -245.0 285.0 167.5) (float-vector -245.0 -285.0 167.5) (float-vector -245.0 -285.0 -147.5) (float-vector -245.0 285.0 -147.5)))
         (instance face :init :vertices (list (float-vector -245.0 -285.0 -147.5) (float-vector -245.0 -285.0 167.5) (float-vector 265.0 -285.0 167.5) (float-vector 265.0 -285.0 -147.5)))
         (instance face :init :vertices (list (float-vector 265.0 285.0 -147.5) (float-vector 265.0 285.0 167.5) (float-vector -245.0 285.0 167.5) (float-vector -245.0 285.0 -147.5)))
         (instance face :init :vertices (list (float-vector -245.0 285.0 -147.5) (float-vector -245.0 -285.0 -147.5) (float-vector 265.0 -285.0 -147.5) (float-vector 265.0 285.0 -147.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 315.0 162.5 112.0) (float-vector 300.0 162.5 112.0) (float-vector 300.0 -162.5 112.0) (float-vector 315.0 -162.5 112.0)))
         (instance face :init :vertices (list (float-vector 300.0 162.5 152.0) (float-vector 300.0 162.5 112.0) (float-vector 315.0 162.5 112.0) (float-vector 315.0 162.5 132.0) (float-vector 310.0 162.5 132.0) (float-vector 310.0 162.5 152.0)))
         (instance face :init :vertices (list (float-vector 300.0 -162.5 152.0) (float-vector 300.0 162.5 152.0) (float-vector 310.0 162.5 152.0) (float-vector 310.0 -162.5 152.0)))
         (instance face :init :vertices (list (float-vector 300.0 -162.5 152.0) (float-vector 300.0 -162.5 112.0) (float-vector 300.0 162.5 112.0) (float-vector 300.0 162.5 152.0)))
         (instance face :init :vertices (list (float-vector 315.0 -162.5 132.0) (float-vector 315.0 -162.5 112.0) (float-vector 300.0 -162.5 112.0) (float-vector 300.0 -162.5 152.0) (float-vector 310.0 -162.5 152.0) (float-vector 310.0 -162.5 132.0)))
         (instance face :init :vertices (list (float-vector 315.0 325.0 -177.5) (float-vector 265.0 325.0 -177.5) (float-vector 265.0 325.0 177.5) (float-vector 315.0 325.0 177.5)))
         (instance face :init :vertices (list (float-vector 265.0 -325.0 -177.5) (float-vector 265.0 325.0 -177.5) (float-vector 315.0 325.0 -177.5) (float-vector 315.0 -325.0 -177.5)))
         (instance face :init :vertices (list (float-vector 315.0 -325.0 177.5) (float-vector 315.0 -212.5 177.5) (float-vector 310.0 -212.5 177.5) (float-vector 310.0 212.5 177.5) (float-vector 315.0 212.5 177.5) (float-vector 315.0 325.0 177.5) (float-vector 265.0 325.0 177.5) (float-vector 265.0 -325.0 177.5)))
         (instance face :init :vertices (list (float-vector 315.0 -325.0 177.5) (float-vector 315.0 -325.0 -177.5) (float-vector 315.0 325.0 -177.5) (float-vector 315.0 325.0 177.5) (float-vector 315.0 212.5 177.5) (float-vector 315.0 212.5 132.0) (float-vector 315.0 162.5 132.0) (float-vector 315.0 162.5 112.0) (float-vector 315.0 -162.5 112.0) (float-vector 315.0 -162.5 132.0) (float-vector 315.0 -212.5 132.0) (float-vector 315.0 -212.5 177.5)))
         (instance face :init :vertices (list (float-vector 265.0 -325.0 177.5) (float-vector 265.0 -325.0 -177.5) (float-vector 315.0 -325.0 -177.5) (float-vector 315.0 -325.0 177.5)))
         (instance face :init :vertices (list (float-vector 265.0 -325.0 -177.5) (float-vector 265.0 -325.0 177.5) (float-vector 265.0 325.0 177.5) (float-vector 265.0 325.0 -177.5)))
         (instance face :init :vertices (list (float-vector 310.0 162.5 132.0) (float-vector 310.0 -162.5 132.0) (float-vector 310.0 -162.5 152.0) (float-vector 310.0 162.5 152.0)))
         (instance face :init :vertices (list (float-vector 310.0 212.5 182.0) (float-vector 310.0 212.5 177.5) (float-vector 310.0 -212.5 177.5) (float-vector 310.0 -212.5 182.0)))
         (instance face :init :vertices (list (float-vector 315.0 -212.5 132.0) (float-vector 320.0 -212.5 132.0) (float-vector 320.0 -212.5 182.0) (float-vector 310.0 -212.5 182.0) (float-vector 310.0 -212.5 177.5) (float-vector 315.0 -212.5 177.5)))
         (instance face :init :vertices (list (float-vector 320.0 -212.5 132.0) (float-vector 320.0 212.5 132.0) (float-vector 320.0 212.5 182.0) (float-vector 320.0 -212.5 182.0)))
         (instance face :init :vertices (list (float-vector 320.0 212.5 182.0) (float-vector 310.0 212.5 182.0) (float-vector 310.0 -212.5 182.0) (float-vector 320.0 -212.5 182.0)))
         (instance face :init :vertices (list (float-vector 320.0 212.5 132.0) (float-vector 315.0 212.5 132.0) (float-vector 315.0 212.5 177.5) (float-vector 310.0 212.5 177.5) (float-vector 310.0 212.5 182.0) (float-vector 320.0 212.5 182.0)))
         (instance face :init :vertices (list (float-vector 315.0 212.5 132.0) (float-vector 320.0 212.5 132.0) (float-vector 320.0 -212.5 132.0) (float-vector 315.0 -212.5 132.0) (float-vector 315.0 -162.5 132.0) (float-vector 310.0 -162.5 132.0) (float-vector 310.0 162.5 132.0) (float-vector 315.0 162.5 132.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :darkseagreen2)
     (setq blink5 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-toshiba-clacio-refrigerator-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-toshiba-clacio-refrigerator-bodyset3
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -265.0 305.0 -157.5) (float-vector -265.0 -305.0 -157.5) (float-vector -265.0 -305.0 157.5) (float-vector -265.0 305.0 157.5)))
         (instance face :init :vertices (list (float-vector 265.0 -305.0 -157.5) (float-vector 265.0 -305.0 157.5) (float-vector -265.0 -305.0 157.5) (float-vector -265.0 -305.0 -157.5)))
         (instance face :init :vertices (list (float-vector 265.0 305.0 -157.5) (float-vector 265.0 305.0 157.5) (float-vector 265.0 285.0 157.5) (float-vector 265.0 285.0 -137.5) (float-vector 265.0 -285.0 -137.5) (float-vector 265.0 -285.0 157.5) (float-vector 265.0 -305.0 157.5) (float-vector 265.0 -305.0 -157.5)))
         (instance face :init :vertices (list (float-vector -265.0 305.0 157.5) (float-vector -265.0 -305.0 157.5) (float-vector 265.0 -305.0 157.5) (float-vector 265.0 -285.0 157.5) (float-vector -245.0 -285.0 157.5) (float-vector -245.0 285.0 157.5) (float-vector 265.0 285.0 157.5) (float-vector 265.0 305.0 157.5)))
         (instance face :init :vertices (list (float-vector 265.0 305.0 -157.5) (float-vector 265.0 -305.0 -157.5) (float-vector -265.0 -305.0 -157.5) (float-vector -265.0 305.0 -157.5)))
         (instance face :init :vertices (list (float-vector -265.0 305.0 -157.5) (float-vector -265.0 305.0 157.5) (float-vector 265.0 305.0 157.5) (float-vector 265.0 305.0 -157.5)))
         (instance face :init :vertices (list (float-vector -245.0 285.0 157.5) (float-vector -245.0 -285.0 157.5) (float-vector -245.0 -285.0 -137.5) (float-vector -245.0 285.0 -137.5)))
         (instance face :init :vertices (list (float-vector -245.0 -285.0 -137.5) (float-vector -245.0 -285.0 157.5) (float-vector 265.0 -285.0 157.5) (float-vector 265.0 -285.0 -137.5)))
         (instance face :init :vertices (list (float-vector 265.0 285.0 -137.5) (float-vector 265.0 285.0 157.5) (float-vector -245.0 285.0 157.5) (float-vector -245.0 285.0 -137.5)))
         (instance face :init :vertices (list (float-vector -245.0 285.0 -137.5) (float-vector -245.0 -285.0 -137.5) (float-vector 265.0 -285.0 -137.5) (float-vector 265.0 285.0 -137.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 315.0 162.5 102.0) (float-vector 300.0 162.5 102.0) (float-vector 300.0 -162.5 102.0) (float-vector 315.0 -162.5 102.0)))
         (instance face :init :vertices (list (float-vector 300.0 162.5 142.0) (float-vector 300.0 162.5 102.0) (float-vector 315.0 162.5 102.0) (float-vector 315.0 162.5 122.0) (float-vector 310.0 162.5 122.0) (float-vector 310.0 162.5 142.0)))
         (instance face :init :vertices (list (float-vector 300.0 -162.5 142.0) (float-vector 300.0 162.5 142.0) (float-vector 310.0 162.5 142.0) (float-vector 310.0 -162.5 142.0)))
         (instance face :init :vertices (list (float-vector 300.0 -162.5 142.0) (float-vector 300.0 -162.5 102.0) (float-vector 300.0 162.5 102.0) (float-vector 300.0 162.5 142.0)))
         (instance face :init :vertices (list (float-vector 315.0 -162.5 122.0) (float-vector 315.0 -162.5 102.0) (float-vector 300.0 -162.5 102.0) (float-vector 300.0 -162.5 142.0) (float-vector 310.0 -162.5 142.0) (float-vector 310.0 -162.5 122.0)))
         (instance face :init :vertices (list (float-vector 315.0 325.0 -167.5) (float-vector 265.0 325.0 -167.5) (float-vector 265.0 325.0 167.5) (float-vector 315.0 325.0 167.5)))
         (instance face :init :vertices (list (float-vector 265.0 -325.0 -167.5) (float-vector 265.0 325.0 -167.5) (float-vector 315.0 325.0 -167.5) (float-vector 315.0 -325.0 -167.5)))
         (instance face :init :vertices (list (float-vector 315.0 -325.0 167.5) (float-vector 315.0 -212.5 167.5) (float-vector 310.0 -212.5 167.5) (float-vector 310.0 212.5 167.5) (float-vector 315.0 212.5 167.5) (float-vector 315.0 325.0 167.5) (float-vector 265.0 325.0 167.5) (float-vector 265.0 -325.0 167.5)))
         (instance face :init :vertices (list (float-vector 315.0 -325.0 167.5) (float-vector 315.0 -325.0 -167.5) (float-vector 315.0 325.0 -167.5) (float-vector 315.0 325.0 167.5) (float-vector 315.0 212.5 167.5) (float-vector 315.0 212.5 122.0) (float-vector 315.0 162.5 122.0) (float-vector 315.0 162.5 102.0) (float-vector 315.0 -162.5 102.0) (float-vector 315.0 -162.5 122.0) (float-vector 315.0 -212.5 122.0) (float-vector 315.0 -212.5 167.5)))
         (instance face :init :vertices (list (float-vector 265.0 -325.0 167.5) (float-vector 265.0 -325.0 -167.5) (float-vector 315.0 -325.0 -167.5) (float-vector 315.0 -325.0 167.5)))
         (instance face :init :vertices (list (float-vector 265.0 -325.0 -167.5) (float-vector 265.0 -325.0 167.5) (float-vector 265.0 325.0 167.5) (float-vector 265.0 325.0 -167.5)))
         (instance face :init :vertices (list (float-vector 310.0 162.5 122.0) (float-vector 310.0 -162.5 122.0) (float-vector 310.0 -162.5 142.0) (float-vector 310.0 162.5 142.0)))
         (instance face :init :vertices (list (float-vector 310.0 212.5 172.0) (float-vector 310.0 212.5 167.5) (float-vector 310.0 -212.5 167.5) (float-vector 310.0 -212.5 172.0)))
         (instance face :init :vertices (list (float-vector 315.0 -212.5 122.0) (float-vector 320.0 -212.5 122.0) (float-vector 320.0 -212.5 172.0) (float-vector 310.0 -212.5 172.0) (float-vector 310.0 -212.5 167.5) (float-vector 315.0 -212.5 167.5)))
         (instance face :init :vertices (list (float-vector 320.0 -212.5 122.0) (float-vector 320.0 212.5 122.0) (float-vector 320.0 212.5 172.0) (float-vector 320.0 -212.5 172.0)))
         (instance face :init :vertices (list (float-vector 320.0 212.5 172.0) (float-vector 310.0 212.5 172.0) (float-vector 310.0 -212.5 172.0) (float-vector 320.0 -212.5 172.0)))
         (instance face :init :vertices (list (float-vector 320.0 212.5 122.0) (float-vector 315.0 212.5 122.0) (float-vector 315.0 212.5 167.5) (float-vector 310.0 212.5 167.5) (float-vector 310.0 212.5 172.0) (float-vector 320.0 212.5 172.0)))
         (instance face :init :vertices (list (float-vector 315.0 212.5 122.0) (float-vector 320.0 212.5 122.0) (float-vector 320.0 -212.5 122.0) (float-vector 315.0 -212.5 122.0) (float-vector 315.0 -162.5 122.0) (float-vector 310.0 -162.5 122.0) (float-vector 310.0 162.5 122.0) (float-vector 315.0 162.5 122.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :darkseagreen2)
     (setq blink4 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-toshiba-clacio-refrigerator-bodyset3 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-toshiba-clacio-refrigerator-bodyset4
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -265.0 103.0 -92.5) (float-vector -265.0 -103.0 -92.5) (float-vector -265.0 -103.0 92.5) (float-vector -265.0 103.0 92.5)))
         (instance face :init :vertices (list (float-vector 265.0 -103.0 -92.5) (float-vector 265.0 -103.0 92.5) (float-vector -265.0 -103.0 92.5) (float-vector -265.0 -103.0 -92.5)))
         (instance face :init :vertices (list (float-vector 265.0 103.0 -92.5) (float-vector 265.0 103.0 92.5) (float-vector 265.0 83.0 92.5) (float-vector 265.0 83.0 -72.5) (float-vector 265.0 -83.0 -72.5) (float-vector 265.0 -83.0 92.5) (float-vector 265.0 -103.0 92.5) (float-vector 265.0 -103.0 -92.5)))
         (instance face :init :vertices (list (float-vector -265.0 103.0 92.5) (float-vector -265.0 -103.0 92.5) (float-vector 265.0 -103.0 92.5) (float-vector 265.0 -83.0 92.5) (float-vector -245.0 -83.0 92.5) (float-vector -245.0 83.0 92.5) (float-vector 265.0 83.0 92.5) (float-vector 265.0 103.0 92.5)))
         (instance face :init :vertices (list (float-vector 265.0 103.0 -92.5) (float-vector 265.0 -103.0 -92.5) (float-vector -265.0 -103.0 -92.5) (float-vector -265.0 103.0 -92.5)))
         (instance face :init :vertices (list (float-vector -265.0 103.0 -92.5) (float-vector -265.0 103.0 92.5) (float-vector 265.0 103.0 92.5) (float-vector 265.0 103.0 -92.5)))
         (instance face :init :vertices (list (float-vector -245.0 83.0 92.5) (float-vector -245.0 -83.0 92.5) (float-vector -245.0 -83.0 -72.5) (float-vector -245.0 83.0 -72.5)))
         (instance face :init :vertices (list (float-vector -245.0 -83.0 -72.5) (float-vector -245.0 -83.0 92.5) (float-vector 265.0 -83.0 92.5) (float-vector 265.0 -83.0 -72.5)))
         (instance face :init :vertices (list (float-vector 265.0 83.0 -72.5) (float-vector 265.0 83.0 92.5) (float-vector -245.0 83.0 92.5) (float-vector -245.0 83.0 -72.5)))
         (instance face :init :vertices (list (float-vector -245.0 83.0 -72.5) (float-vector -245.0 -83.0 -72.5) (float-vector 265.0 -83.0 -72.5) (float-vector 265.0 83.0 -72.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 315.0 61.5 37.0) (float-vector 300.0 61.5 37.0) (float-vector 300.0 -61.5 37.0) (float-vector 315.0 -61.5 37.0)))
         (instance face :init :vertices (list (float-vector 300.0 61.5 77.0) (float-vector 300.0 61.5 37.0) (float-vector 315.0 61.5 37.0) (float-vector 315.0 61.5 57.0) (float-vector 310.0 61.5 57.0) (float-vector 310.0 61.5 77.0)))
         (instance face :init :vertices (list (float-vector 300.0 -61.5 77.0) (float-vector 300.0 61.5 77.0) (float-vector 310.0 61.5 77.0) (float-vector 310.0 -61.5 77.0)))
         (instance face :init :vertices (list (float-vector 300.0 -61.5 77.0) (float-vector 300.0 -61.5 37.0) (float-vector 300.0 61.5 37.0) (float-vector 300.0 61.5 77.0)))
         (instance face :init :vertices (list (float-vector 315.0 -61.5 57.0) (float-vector 315.0 -61.5 37.0) (float-vector 300.0 -61.5 37.0) (float-vector 300.0 -61.5 77.0) (float-vector 310.0 -61.5 77.0) (float-vector 310.0 -61.5 57.0)))
         (instance face :init :vertices (list (float-vector 315.0 123.0 -102.5) (float-vector 265.0 123.0 -102.5) (float-vector 265.0 123.0 102.5) (float-vector 315.0 123.0 102.5)))
         (instance face :init :vertices (list (float-vector 265.0 -123.0 -102.5) (float-vector 265.0 123.0 -102.5) (float-vector 315.0 123.0 -102.5) (float-vector 315.0 -123.0 -102.5)))
         (instance face :init :vertices (list (float-vector 315.0 -123.0 102.5) (float-vector 315.0 -111.5 102.5) (float-vector 310.0 -111.5 102.5) (float-vector 310.0 111.5 102.5) (float-vector 315.0 111.5 102.5) (float-vector 315.0 123.0 102.5) (float-vector 265.0 123.0 102.5) (float-vector 265.0 -123.0 102.5)))
         (instance face :init :vertices (list (float-vector 315.0 -123.0 102.5) (float-vector 315.0 -123.0 -102.5) (float-vector 315.0 123.0 -102.5) (float-vector 315.0 123.0 102.5) (float-vector 315.0 111.5 102.5) (float-vector 315.0 111.5 57.0) (float-vector 315.0 61.5 57.0) (float-vector 315.0 61.5 37.0) (float-vector 315.0 -61.5 37.0) (float-vector 315.0 -61.5 57.0) (float-vector 315.0 -111.5 57.0) (float-vector 315.0 -111.5 102.5)))
         (instance face :init :vertices (list (float-vector 265.0 -123.0 102.5) (float-vector 265.0 -123.0 -102.5) (float-vector 315.0 -123.0 -102.5) (float-vector 315.0 -123.0 102.5)))
         (instance face :init :vertices (list (float-vector 265.0 -123.0 -102.5) (float-vector 265.0 -123.0 102.5) (float-vector 265.0 123.0 102.5) (float-vector 265.0 123.0 -102.5)))
         (instance face :init :vertices (list (float-vector 310.0 61.5 57.0) (float-vector 310.0 -61.5 57.0) (float-vector 310.0 -61.5 77.0) (float-vector 310.0 61.5 77.0)))
         (instance face :init :vertices (list (float-vector 310.0 111.5 107.0) (float-vector 310.0 111.5 102.5) (float-vector 310.0 -111.5 102.5) (float-vector 310.0 -111.5 107.0)))
         (instance face :init :vertices (list (float-vector 315.0 -111.5 57.0) (float-vector 320.0 -111.5 57.0) (float-vector 320.0 -111.5 107.0) (float-vector 310.0 -111.5 107.0) (float-vector 310.0 -111.5 102.5) (float-vector 315.0 -111.5 102.5)))
         (instance face :init :vertices (list (float-vector 320.0 -111.5 57.0) (float-vector 320.0 111.5 57.0) (float-vector 320.0 111.5 107.0) (float-vector 320.0 -111.5 107.0)))
         (instance face :init :vertices (list (float-vector 320.0 111.5 107.0) (float-vector 310.0 111.5 107.0) (float-vector 310.0 -111.5 107.0) (float-vector 320.0 -111.5 107.0)))
         (instance face :init :vertices (list (float-vector 320.0 111.5 57.0) (float-vector 315.0 111.5 57.0) (float-vector 315.0 111.5 102.5) (float-vector 310.0 111.5 102.5) (float-vector 310.0 111.5 107.0) (float-vector 320.0 111.5 107.0)))
         (instance face :init :vertices (list (float-vector 315.0 111.5 57.0) (float-vector 320.0 111.5 57.0) (float-vector 320.0 -111.5 57.0) (float-vector 315.0 -111.5 57.0) (float-vector 315.0 -61.5 57.0) (float-vector 310.0 -61.5 57.0) (float-vector 310.0 61.5 57.0) (float-vector 315.0 61.5 57.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :darkseagreen2)
     (setq blink2 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-toshiba-clacio-refrigerator-bodyset4 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-toshiba-clacio-refrigerator-bodyset5
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector -265.0 180.0 -92.5) (float-vector -265.0 -180.0 -92.5) (float-vector -265.0 -180.0 92.5) (float-vector -265.0 180.0 92.5)))
         (instance face :init :vertices (list (float-vector 265.0 -180.0 -92.5) (float-vector 265.0 -180.0 92.5) (float-vector -265.0 -180.0 92.5) (float-vector -265.0 -180.0 -92.5)))
         (instance face :init :vertices (list (float-vector 265.0 180.0 -92.5) (float-vector 265.0 180.0 92.5) (float-vector 265.0 160.0 92.5) (float-vector 265.0 160.0 -72.5) (float-vector 265.0 -160.0 -72.5) (float-vector 265.0 -160.0 92.5) (float-vector 265.0 -180.0 92.5) (float-vector 265.0 -180.0 -92.5)))
         (instance face :init :vertices (list (float-vector -265.0 180.0 92.5) (float-vector -265.0 -180.0 92.5) (float-vector 265.0 -180.0 92.5) (float-vector 265.0 -160.0 92.5) (float-vector -245.0 -160.0 92.5) (float-vector -245.0 160.0 92.5) (float-vector 265.0 160.0 92.5) (float-vector 265.0 180.0 92.5)))
         (instance face :init :vertices (list (float-vector 265.0 180.0 -92.5) (float-vector 265.0 -180.0 -92.5) (float-vector -265.0 -180.0 -92.5) (float-vector -265.0 180.0 -92.5)))
         (instance face :init :vertices (list (float-vector -265.0 180.0 -92.5) (float-vector -265.0 180.0 92.5) (float-vector 265.0 180.0 92.5) (float-vector 265.0 180.0 -92.5)))
         (instance face :init :vertices (list (float-vector -245.0 160.0 92.5) (float-vector -245.0 -160.0 92.5) (float-vector -245.0 -160.0 -72.5) (float-vector -245.0 160.0 -72.5)))
         (instance face :init :vertices (list (float-vector -245.0 -160.0 -72.5) (float-vector -245.0 -160.0 92.5) (float-vector 265.0 -160.0 92.5) (float-vector 265.0 -160.0 -72.5)))
         (instance face :init :vertices (list (float-vector 265.0 160.0 -72.5) (float-vector 265.0 160.0 92.5) (float-vector -245.0 160.0 92.5) (float-vector -245.0 160.0 -72.5)))
         (instance face :init :vertices (list (float-vector -245.0 160.0 -72.5) (float-vector -245.0 -160.0 -72.5) (float-vector 265.0 -160.0 -72.5) (float-vector 265.0 160.0 -72.5)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 315.0 100.0 37.0) (float-vector 300.0 100.0 37.0) (float-vector 300.0 -100.0 37.0) (float-vector 315.0 -100.0 37.0)))
         (instance face :init :vertices (list (float-vector 300.0 100.0 77.0) (float-vector 300.0 100.0 37.0) (float-vector 315.0 100.0 37.0) (float-vector 315.0 100.0 57.0) (float-vector 310.0 100.0 57.0) (float-vector 310.0 100.0 77.0)))
         (instance face :init :vertices (list (float-vector 300.0 -100.0 77.0) (float-vector 300.0 100.0 77.0) (float-vector 310.0 100.0 77.0) (float-vector 310.0 -100.0 77.0)))
         (instance face :init :vertices (list (float-vector 300.0 -100.0 77.0) (float-vector 300.0 -100.0 37.0) (float-vector 300.0 100.0 37.0) (float-vector 300.0 100.0 77.0)))
         (instance face :init :vertices (list (float-vector 315.0 -100.0 57.0) (float-vector 315.0 -100.0 37.0) (float-vector 300.0 -100.0 37.0) (float-vector 300.0 -100.0 77.0) (float-vector 310.0 -100.0 77.0) (float-vector 310.0 -100.0 57.0)))
         (instance face :init :vertices (list (float-vector 315.0 200.0 -102.5) (float-vector 265.0 200.0 -102.5) (float-vector 265.0 200.0 102.5) (float-vector 315.0 200.0 102.5)))
         (instance face :init :vertices (list (float-vector 265.0 -200.0 -102.5) (float-vector 265.0 200.0 -102.5) (float-vector 315.0 200.0 -102.5) (float-vector 315.0 -200.0 -102.5)))
         (instance face :init :vertices (list (float-vector 315.0 -200.0 102.5) (float-vector 315.0 -150.0 102.5) (float-vector 310.0 -150.0 102.5) (float-vector 310.0 150.0 102.5) (float-vector 315.0 150.0 102.5) (float-vector 315.0 200.0 102.5) (float-vector 265.0 200.0 102.5) (float-vector 265.0 -200.0 102.5)))
         (instance face :init :vertices (list (float-vector 315.0 -200.0 102.5) (float-vector 315.0 -200.0 -102.5) (float-vector 315.0 200.0 -102.5) (float-vector 315.0 200.0 102.5) (float-vector 315.0 150.0 102.5) (float-vector 315.0 150.0 57.0) (float-vector 315.0 100.0 57.0) (float-vector 315.0 100.0 37.0) (float-vector 315.0 -100.0 37.0) (float-vector 315.0 -100.0 57.0) (float-vector 315.0 -150.0 57.0) (float-vector 315.0 -150.0 102.5)))
         (instance face :init :vertices (list (float-vector 265.0 -200.0 102.5) (float-vector 265.0 -200.0 -102.5) (float-vector 315.0 -200.0 -102.5) (float-vector 315.0 -200.0 102.5)))
         (instance face :init :vertices (list (float-vector 265.0 -200.0 -102.5) (float-vector 265.0 -200.0 102.5) (float-vector 265.0 200.0 102.5) (float-vector 265.0 200.0 -102.5)))
         (instance face :init :vertices (list (float-vector 310.0 100.0 57.0) (float-vector 310.0 -100.0 57.0) (float-vector 310.0 -100.0 77.0) (float-vector 310.0 100.0 77.0)))
         (instance face :init :vertices (list (float-vector 310.0 150.0 107.0) (float-vector 310.0 150.0 102.5) (float-vector 310.0 -150.0 102.5) (float-vector 310.0 -150.0 107.0)))
         (instance face :init :vertices (list (float-vector 315.0 -150.0 57.0) (float-vector 320.0 -150.0 57.0) (float-vector 320.0 -150.0 107.0) (float-vector 310.0 -150.0 107.0) (float-vector 310.0 -150.0 102.5) (float-vector 315.0 -150.0 102.5)))
         (instance face :init :vertices (list (float-vector 320.0 -150.0 57.0) (float-vector 320.0 150.0 57.0) (float-vector 320.0 150.0 107.0) (float-vector 320.0 -150.0 107.0)))
         (instance face :init :vertices (list (float-vector 320.0 150.0 107.0) (float-vector 310.0 150.0 107.0) (float-vector 310.0 -150.0 107.0) (float-vector 320.0 -150.0 107.0)))
         (instance face :init :vertices (list (float-vector 320.0 150.0 57.0) (float-vector 315.0 150.0 57.0) (float-vector 315.0 150.0 102.5) (float-vector 310.0 150.0 102.5) (float-vector 310.0 150.0 107.0) (float-vector 320.0 150.0 107.0)))
         (instance face :init :vertices (list (float-vector 315.0 150.0 57.0) (float-vector 320.0 150.0 57.0) (float-vector 320.0 -150.0 57.0) (float-vector 315.0 -150.0 57.0) (float-vector 315.0 -100.0 57.0) (float-vector 310.0 -100.0 57.0) (float-vector 310.0 100.0 57.0) (float-vector 315.0 100.0 57.0)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :white)
     (send (elt bc 1) :set-color :darkseagreen2)
     (setq blink3 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-toshiba-clacio-refrigerator-bodyset5 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :room73b2-toshiba-clacio-refrigerator-bodyset6
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 25.0 -485.0 195.75) (float-vector 15.0 -485.0 195.75) (float-vector 15.0 -565.0 195.75) (float-vector 17.5 -565.0 195.75) (float-vector 17.5 -525.0 195.75) (float-vector 25.0 -525.0 195.75)))
         (instance face :init :vertices (list (float-vector 15.0 -485.0 588.25) (float-vector 15.0 -485.0 195.75) (float-vector 25.0 -485.0 195.75) (float-vector 25.0 -485.0 588.25)))
         (instance face :init :vertices (list (float-vector 15.0 -565.0 588.25) (float-vector 15.0 -485.0 588.25) (float-vector 25.0 -485.0 588.25) (float-vector 25.0 -525.0 588.25) (float-vector 17.5 -525.0 588.25) (float-vector 17.5 -565.0 588.25)))
         (instance face :init :vertices (list (float-vector 15.0 -565.0 588.25) (float-vector 15.0 -565.0 195.75) (float-vector 15.0 -485.0 195.75) (float-vector 15.0 -485.0 588.25)))
         (instance face :init :vertices (list (float-vector 15.0 -565.0 195.75) (float-vector 15.0 -565.0 588.25) (float-vector 17.5 -565.0 588.25) (float-vector 17.5 -565.0 195.75)))
         (instance face :init :vertices (list (float-vector 25.0 25.0 -0.5) (float-vector -25.0 25.0 -0.5) (float-vector -25.0 25.0 784.5) (float-vector 25.0 25.0 784.5)))
         (instance face :init :vertices (list (float-vector -25.0 -625.0 -0.5) (float-vector -25.0 25.0 -0.5) (float-vector 25.0 25.0 -0.5) (float-vector 25.0 -625.0 -0.5)))
         (instance face :init :vertices (list (float-vector 25.0 -625.0 784.5) (float-vector 25.0 25.0 784.5) (float-vector -25.0 25.0 784.5) (float-vector -25.0 -625.0 784.5)))
         (instance face :init :vertices (list (float-vector 25.0 -625.0 784.5) (float-vector 25.0 -625.0 -0.5) (float-vector 25.0 25.0 -0.5) (float-vector 25.0 25.0 784.5))
                              :holes (list
         (instance hole :init :vertices (list (float-vector 25.0 -525.0 588.25) (float-vector 25.0 -485.0 588.25) (float-vector 25.0 -485.0 195.75) (float-vector 25.0 -525.0 195.75) (float-vector 25.0 -525.0 140.8) (float-vector 25.0 -605.0 140.8) (float-vector 25.0 -605.0 643.2) (float-vector 25.0 -525.0 643.2)))
))
         (instance face :init :vertices (list (float-vector -25.0 -625.0 784.5) (float-vector -25.0 -625.0 -0.5) (float-vector 25.0 -625.0 -0.5) (float-vector 25.0 -625.0 784.5)))
         (instance face :init :vertices (list (float-vector -25.0 -625.0 -0.5) (float-vector -25.0 -625.0 784.5) (float-vector -25.0 25.0 784.5) (float-vector -25.0 25.0 -0.5)))
         (instance face :init :vertices (list (float-vector 17.5 -525.0 588.25) (float-vector 17.5 -525.0 195.75) (float-vector 17.5 -565.0 195.75) (float-vector 17.5 -565.0 588.25)))
         (instance face :init :vertices (list (float-vector 25.0 -605.0 140.8) (float-vector 32.5 -605.0 140.8) (float-vector 32.5 -605.0 643.2) (float-vector 25.0 -605.0 643.2)))
         (instance face :init :vertices (list (float-vector 32.5 -605.0 140.8) (float-vector 32.5 -525.0 140.8) (float-vector 32.5 -525.0 643.2) (float-vector 32.5 -605.0 643.2)))
         (instance face :init :vertices (list (float-vector 32.5 -525.0 643.2) (float-vector 25.0 -525.0 643.2) (float-vector 25.0 -605.0 643.2) (float-vector 32.5 -605.0 643.2)))
         (instance face :init :vertices (list (float-vector 32.5 -525.0 140.8) (float-vector 25.0 -525.0 140.8) (float-vector 25.0 -525.0 195.75) (float-vector 17.5 -525.0 195.75) (float-vector 17.5 -525.0 588.25) (float-vector 25.0 -525.0 588.25) (float-vector 25.0 -525.0 643.2) (float-vector 32.5 -525.0 643.2)))
         (instance face :init :vertices (list (float-vector 25.0 -525.0 140.8) (float-vector 32.5 -525.0 140.8) (float-vector 32.5 -605.0 140.8) (float-vector 25.0 -605.0 140.8)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :darkseagreen2)
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :room73b2-toshiba-clacio-refrigerator-bodyset6 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send blink1 :newcoords (make-coords :pos (float-vector 275.0 300.0 960.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink1)
     (send blink3 :newcoords (make-coords :pos (float-vector -15.0 125.0 852.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink3)
     (send blink2 :newcoords (make-coords :pos (float-vector -15.0 -203.0 852.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink2)
     (send blink4 :newcoords (make-coords :pos (float-vector -15.0 0.0 577.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink4)
     (send blink5 :newcoords (make-coords :pos (float-vector -15.0 0.0 227.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink5)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     ;; definition of :door-upper
     (setq joint0 (instance rotational-joint :init
			     :parent-link blink0 :child-link blink1 :name :door-upper :axis :z 
			     :min    0.0 :max   90.0 :max-joint-velocity 5 :max-joint-torque 100))

     ;; definition of :drawer-middle-right
     (setq joint1 (instance linear-joint :init
			     :parent-link blink0 :child-link blink2 :name :drawer-middle-right :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  600.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer-middle-left
     (setq joint2 (instance linear-joint :init
			     :parent-link blink0 :child-link blink3 :name :drawer-middle-left :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  600.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer-lower1
     (setq joint3 (instance linear-joint :init
			     :parent-link blink0 :child-link blink4 :name :drawer-lower1 :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  600.0 :max-joint-velocity 0.785398 :max-joint-torque 100))

     ;; definition of :drawer-lower2
     (setq joint4 (instance linear-joint :init
			     :parent-link blink0 :child-link blink5 :name :drawer-lower2 :axis (float-vector 1.0 0.0 0.0)
			     :min    0.0 :max  600.0 :max-joint-velocity 0.785398 :max-joint-torque 100))


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 307.5 -295.0 1273.5) :rot #2f((-0.866025 0.5 0.0) (-0.5 -0.866025 0.0) (0.0 0.0 1.0)) :name "door-upper"))
     (send blink1 :assoc handle0)
     (setq handle1 (make-cascoords :pos (float-vector 294.739 -123.0 937.191) :rot #2f((-0.939693 -0.34202 -2.775558e-17) (2.775558e-17 -1.110223e-16 1.0) (-0.34202 0.939693 1.110223e-16)) :name "drawer-middle-right"))
     (send blink2 :assoc handle1)
     (setq handle2 (make-cascoords :pos (float-vector 294.739 95.0 937.191) :rot #2f((-0.939693 -0.34202 -2.775558e-17) (2.775558e-17 -1.110223e-16 1.0) (-0.34202 0.939693 1.110223e-16)) :name "drawer-middle-left"))
     (send blink3 :assoc handle2)
     (setq handle3 (make-cascoords :pos (float-vector 305.0 0.0 699.0) :rot #2f((-0.866025 0.5 0.0) (0.0 0.0 1.0) (0.5 0.866025 0.0)) :name "drawer-lower1"))
     (send blink4 :assoc handle3)
     (setq handle4 (make-cascoords :pos (float-vector 305.0 0.0 359.0) :rot #2f((-0.866025 0.5 0.0) (0.0 0.0 1.0) (0.5 0.866025 0.0)) :name "drawer-lower2"))
     (send blink5 :assoc handle4)

     ;; init-ending 
     (setq links (list blink0 blink1 blink2 blink3 blink4 blink5))
     (setq joint-list (list joint0 joint1 joint2 joint3 joint4))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:door-upper (&rest args) (forward-message-to joint0 args))
  (:drawer-middle-right (&rest args) (forward-message-to joint1 args))
  (:drawer-middle-left (&rest args) (forward-message-to joint2 args))
  (:drawer-lower1 (&rest args) (forward-message-to joint3 args))
  (:drawer-lower2 (&rest args) (forward-message-to joint4 args))
  (:handle (&rest args) (forward-message-to-all (list  handle0 handle1 handle2 handle3 handle4) args))
  (:handle-door-upper (&rest args) (forward-message-to handle0 args))
  (:handle-drawer-middle-right (&rest args) (forward-message-to handle1 args))
  (:handle-drawer-middle-left (&rest args) (forward-message-to handle2 args))
  (:handle-drawer-lower1 (&rest args) (forward-message-to handle3 args))
  (:handle-drawer-lower2 (&rest args) (forward-message-to handle4 args))
  (:attention (&rest args) (forward-message-to-all (list ) args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun room73b2-toshiba-clacio-refrigerator (&rest args) (instance* room73b2-toshiba-clacio-refrigerator-object :init args))
;; (format *error-output* "(instance room73b2-toshiba-clacio-refrigerator-object :init) for generating model~%")
